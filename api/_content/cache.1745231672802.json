{"generatedAt":1745231697036,"generateTime":719,"contents":[{"_path":"/about","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"关于","description":"","hide-info":true,"readingTime":{"text":"6 min read","minutes":5.73,"time":343800,"words":1146},"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"我"},"children":[{"type":"text","value":"我？"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这是Mikuの鬆，也是一只鬆，也可能是蓝鱼儿，这些都是我曾经的网名，你可以选择任何一种方式称呼我，你开心就好。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"16人格：INFP-A 调停者"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"现实中，我认为我自己因为优柔寡断错过了许多选择，目前是山东某专科大数据技术专业应届新生。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"身体比较一般（例如 185 的个子却只有 60 公斤😓 ，然而我一顿饭吃的却是三个人的量，狂吃不胖 ing），所以对除了跑步与打羽毛球以外的运动不大喜欢。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"有点懒（不是起床气），希望事情尽量能做到一劳永逸（然而总是事和愿违）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"认真投入（限定于感兴趣的事），深度投入到个人喜欢的事情，对于感兴趣的事情愿意不吃不喝为之连续投入😋 。当然，一般不是玩的事情（确信）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"演讲恐惧症：我不要演讲啊啊啊啊！"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"喜欢山楂制品，包括山楂，不管生的熟的或者酸的甜的，全部通吃。"}]},{"type":"element","tag":"h2","props":{"id":"恋爱观"},"children":[{"type":"text","value":"恋爱观？"}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"目前”Mikuの鬆“正与“她”处于恋爱中。"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"身心相许，以恋结缘；生生世世，不离不弃。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在看到了友链晓空所述的恋爱观以后，我也打算写出我对此的想法，也引用了他的部分内容。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我是一个纯爱党，在生理上就排斥各种奇奇怪怪的恋爱观，在恋爱上偏传统，愿意真心对她好。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"恋爱、结婚、还有传宗接代，这是大自然赋予给一切生灵的使命和责任，同样也是每个人都会经历的义务和旅程。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"有些事情，它们也应该是高尚而纯洁的，也并非那么的不堪，但同样也不该以此取乐。"}]},{"type":"element","tag":"h2","props":{"id":"tags"},"children":[{"type":"text","value":"Tags"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"大学牲 / 伪二次元 / 动漫党 / 瞎折腾 / 搞事情 / 日常生产bug"}]},{"type":"element","tag":"h2","props":{"id":"找我"},"children":[{"type":"text","value":"找我？"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"个人在社交工具上偏QQ，微信多为熟人（现实中认识的人），我的QQ是：2319665062。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"邮箱上域名邮箱（"},{"type":"element","tag":"a","props":{"href":"mailto:admin@sotkg.com"},"children":[{"type":"text","value":"admin@sotkg.com"}]},{"type":"text","value":"）被看到的优先级比较高，Outlook邮箱（"},{"type":"element","tag":"a","props":{"href":"mailto:palomiku@outlook.com"},"children":[{"type":"text","value":"palomiku@outlook.com"}]},{"type":"text","value":"）则次之。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"虽然我很想列一下联邦宇宙方式，但是暂时先不列了吧。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"想和我一起玩崩坏星穹铁道嘛，通过UID：101045700（官服）添加我为好友吧。"}]},{"type":"element","tag":"h2","props":{"id":"投食"},"children":[{"type":"text","value":"投食！"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这个博主目前还是个可怜巴巴的学生党，如果你愿意的话可以投喂他！"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"大部分应该都会用到站点维护工作上，也有可能优先解决个人存活问题（比如吃饭），适当投喂鸽子可以减少鸽子咕咕咕的概率，投喂博主也会减少博主咕咕咕的概率（Bushi）"}]},{"type":"element","tag":"tab","props":{":tabs":"[\"微信\", \"支付宝\"]"},"children":[{"type":"element","tag":"template","props":{"v-slot:tab1":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"https://pic.imgdb.cn/item/672059a6d29ded1a8cd554b5.png"},"children":[]}]}]},{"type":"element","tag":"template","props":{"v-slot:tab2":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"等待更新"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果你选择投食，你可以留下你的话，我都会展示在这里，不管数额有多少。（我可能也会列出我的回复）"}]},{"type":"element","tag":"h2","props":{"id":"版权"},"children":[{"type":"text","value":"版权？"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所有文章如无特别声明均可视为采用 "},{"type":"element","tag":"a","props":{"href":"https://creativecommons.org/licenses/by-sa/4.0/","rel":["nofollow"]},"children":[{"type":"text","value":"知识共享署名-相同方式共享 4.0 国际许可协议"}]},{"type":"text","value":" 进行许可，这意味着你无需询问我是否可以转载。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但是作为附加条件，你必须要在转载前在我这里留言告诉我你转载到了何处，并且附上转载的地址链接，同时禁止转载到非法以及黄色网站。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"于此同时，你也必须在我要求你删除转载的文章时删除你转载的文章，并且在取得我的同意前不得再次转载至此网站。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所有尚未标注采用 "},{"type":"element","tag":"a","props":{"href":"https://creativecommons.org/licenses/by-sa/4.0/","rel":["nofollow"]},"children":[{"type":"text","value":"知识共享署名-相同方式共享 4.0 国际许可协议"}]},{"type":"text","value":" 进行许可字样的内容被默认视为禁止一切行为的转载，但是允许在取得我的同意之后进行引用（需要说明引用至何处作何作用）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果有特殊声明的页面或文章，请按照此文章的特殊声明来判断是否允许转载，如果无法确定你也可以来询问我是否可以转载。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"关于代码方面，请按照相应的仓库许可证来判断是否可以转载和引用。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果没有添加许可证或者有疑问的，请留言询问我是否可以转载和引用。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但不论是何种行为的引用或者转载，在尚未取得我的同意之前都禁止用于一切的商业行为上的用途。"}]}],"toc":{"title":"","searchDepth":4,"depth":4,"links":[{"id":"我","depth":2,"text":"我？"},{"id":"恋爱观","depth":2,"text":"恋爱观？"},{"id":"tags","depth":2,"text":"Tags"},{"id":"找我","depth":2,"text":"找我？"},{"id":"投食","depth":2,"text":"投食！"},{"id":"版权","depth":2,"text":"版权？"}]}},"_type":"markdown","_id":"content:about.md","_source":"content","_file":"about.md","_stem":"about","_extension":"md","categories":["未分类"]},{"_path":"/drive","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"云盘","description":"","hide-info":true,"readingTime":{"text":"3 min read","minutes":2.155,"time":129300,"words":431},"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"访问方式"},"children":[{"type":"text","value":"访问方式"}]},{"type":"element","tag":"link-card","props":{"description":"由 Circlari Operations Team 运营","icon":"https://minio-api.tkg3.top/sharkey-assets/sitelogo_178x178.png","link":"https://file.tkg3.top","title":"Circlari Files"},"children":[]},{"type":"element","tag":"h2","props":{"id":"高木文件资源盘"},"children":[{"type":"text","value":"高木文件资源盘"}]},{"type":"element","tag":"alert","props":{"type":"question"},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"注意"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"《擅长捉弄的高木同学》系列文件全球CDN存储由木创社成员 "},{"type":"element","tag":"badge","props":{"img":"https://blog.yoruzzz.cn/_next/image?url=https%3A%2F%2Fbu.dusays.com%2F2024%2F06%2F05%2F66605f9c7e600.jpg&w=640&q=75","link":"https://blog.yoruzzz.cn"},"children":[{"type":"text","value":"南栀"}]},{"type":"text","value":"和 "},{"type":"element","tag":"badge","props":{"img":"https://pic.imgdb.cn/item/66be3143d9c307b7e9dbc86e.jpg","link":"https://aurorainic.top"},"children":[{"type":"text","value":"辰灿汐"}]},{"type":"text","value":"提供，国内文件存储由 "},{"type":"element","tag":"badge","props":{"img":"https://cravatar.cn/avatar/1012bf78fb01d5b964c3a9a0f515911a?s=160","link":"/"},"children":[{"type":"text","value":"Mikuの鬆"}]},{"type":"text","value":"提供。"}]}]},{"type":"element","tag":"tab","props":{":tabs":"[\"本站信息\", \"鸣谢名单\", \"访问密码\"]"},"children":[{"type":"element","tag":"template","props":{"v-slot:tab1":""},"children":[{"type":"element","tag":"alert","props":{"type":"warning"},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"注意"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"本站所有文件均由互联网采集或其他社群成员贡献提供，仅做个人学习、有限观赏使用。如有条件请通过正规渠道购买资源实体。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"如有意见建议、版权诉求等请通过评论区或邮件联系："},{"type":"element","tag":"a","props":{"href":"mailto:tech-club@takagi3.cn"},"children":[{"type":"text","value":"tech-club@takagi3.cn"}]}]}]}]},{"type":"element","tag":"folding","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"站点运营主体和相关信息"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"运营主体： "},{"type":"element","tag":"badge","props":{"img":"https://cravatar.cn/avatar/1012bf78fb01d5b964c3a9a0f515911a?s=160","link":"/"},"children":[{"type":"text","value":"Mikuの鬆"}]},{"type":"text","value":"， "},{"type":"element","tag":"badge","props":{"img":"https://minio-api.tkg3.top/sharkey-assets/sitelogo_178x178.png","link":"https://circle.tkg3.top/"},"children":[{"type":"text","value":"Circlari Team"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"服务器信息：后端位于中国香港，前端通过Vercel全球加速和提供安全性保护"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"站点为公益性质，不作为商业用途使用，也不会以任何商业名义售卖其资源文件。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"本站招募资源志愿者，有意向者请通过反馈邮件，评论区，QQ群方式联系。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"对于其他高木资源网盘、站点等，通过直接拉取我站资源文件等方式来完善自身内容储备的行为，我方并不反对。但必须"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"在显著位置标注本站信息"}]},{"type":"text","value":"。"}]}]}]},{"type":"element","tag":"template","props":{"v-slot:tab2":""},"children":[{"type":"element","tag":"h2","props":{"id":"主维护者"},"children":[{"type":"text","value":"主维护者"}]},{"type":"element","tag":"badge","props":{"img":"https://blog.yoruzzz.cn/_next/image?url=https%3A%2F%2Fbu.dusays.com%2F2024%2F06%2F05%2F66605f9c7e600.jpg&w=640&q=75","link":"https://blog.yoruzzz.cn"},"children":[{"type":"text","value":"南栀"}]},{"type":"element","tag":"badge","props":{"img":"https://pic.imgdb.cn/item/66be3143d9c307b7e9dbc86e.jpg","link":"https://aurorainic.top"},"children":[{"type":"text","value":"辰灿汐"}]},{"type":"element","tag":"badge","props":{"img":"https://cravatar.cn/avatar/1012bf78fb01d5b964c3a9a0f515911a?s=160","link":"/"},"children":[{"type":"text","value":"Mikuの鬆"}]},{"type":"element","tag":"h2","props":{"id":"特别鸣谢"},"children":[{"type":"text","value":"特别鸣谢"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://space.bilibili.com/517104324","rel":["nofollow"]},"children":[{"type":"text","value":"TAKAGI3"}]},{"type":"text","value":"  ，"},{"type":"element","tag":"a","props":{"href":"https://space.bilibili.com/23691686","rel":["nofollow"]},"children":[{"type":"text","value":"CN-SWAT20"}]},{"type":"text","value":"  ，narcissu017  ，"},{"type":"element","tag":"a","props":{"href":"https://space.bilibili.com/17763935","rel":["nofollow"]},"children":[{"type":"text","value":"告白の假面"}]},{"type":"text","value":"  ，"},{"type":"element","tag":"a","props":{"href":"https://space.bilibili.com/436044923","rel":["nofollow"]},"children":[{"type":"text","value":"横竖都为难"}]},{"type":"text","value":"  ，"},{"type":"element","tag":"a","props":{"href":"https://space.bilibili.com/271246992","rel":["nofollow"]},"children":[{"type":"text","value":"米饭君爱吃糖"}]},{"type":"text","value":"  ，"},{"type":"element","tag":"a","props":{"href":"https://space.bilibili.com/354522608","rel":["nofollow"]},"children":[{"type":"text","value":"擅长赖床的夏墨同学"}]},{"type":"text","value":"  ，"},{"type":"element","tag":"a","props":{"href":"https://space.bilibili.com/2709173","rel":["nofollow"]},"children":[{"type":"text","value":"擅长捉弄の高木同学"}]},{"type":"text","value":"  ，"},{"type":"element","tag":"a","props":{"href":"https://space.bilibili.com/687160102","rel":["nofollow"]},"children":[{"type":"text","value":"沙水君sandwater"}]},{"type":"text","value":"  ，"},{"type":"element","tag":"a","props":{"href":"https://space.bilibili.com/1229191353","rel":["nofollow"]},"children":[{"type":"text","value":"小瑀"}]},{"type":"text","value":"  ，右岸逆光  ，"},{"type":"element","tag":"a","props":{"href":"https://space.bilibili.com/1121247935","rel":["nofollow"]},"children":[{"type":"text","value":"坐等"}]}]}]},{"type":"element","tag":"template","props":{"v-slot:tab3":""},"children":[{"type":"element","tag":"alert","props":{"type":"warning"},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"注意"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"您在此获取访问密码即代表您已阅读并同意“本站信息”内容，严禁倒卖本站资源，本站不支持，不参与一切商业售卖资源文件活动。"}]}]}]},{"type":"element","tag":"copy","props":{"code":"tkg3-7bae-9352-9d93","prompt":"访问密码"},"children":[]}]}]}],"toc":{"title":"","searchDepth":4,"depth":4,"links":[{"id":"访问方式","depth":2,"text":"访问方式"},{"id":"高木文件资源盘","depth":2,"text":"高木文件资源盘"},{"id":"主维护者","depth":2,"text":"主维护者"},{"id":"特别鸣谢","depth":2,"text":"特别鸣谢"}]}},"_type":"markdown","_id":"content:drive.md","_source":"content","_file":"drive.md","_stem":"drive","_extension":"md","categories":["未分类"]},{"_path":"/link","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Link","description":"","readingTime":{"text":"1 min read","minutes":0.65,"time":39000,"words":130},"body":{"type":"root","children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"申请要求：原则上与多数独立博客的友链要求一致\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"能够"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"长期更新维护"}]},{"type":"text","value":"，并输出"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"有价值的原创内容"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"可以参考 "},{"type":"element","tag":"a","props":{"href":"https://www.travellings.cn/docs/join.html","rel":["nofollow"]},"children":[{"type":"text","value":"加入开往"}]},{"type":"text","value":" 页面的规则"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"申请方式：在评论区留言或发送邮件到 "},{"type":"element","tag":"tip","props":{":copy":"true","text":"palomiku@outlook.com"},"children":[]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"标题注明 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"友链申请: 你的昵称"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"以 "},{"type":"element","tag":"tip","props":{"tip":"指向信息的 URL、自然语言、编程语言"},"children":[{"type":"text","value":"任意形式"}]},{"type":"text","value":" 附上友链信息\n"},{"type":"element","tag":"pre","props":{"className":"language-ts shiki shiki-themes catppuccin-latte one-dark-pro","code":"export default {\n    title: '博客名称',\n    desc: '博客描述',\n    link: '博客地址',\n    avatar: '个人头像',\n} satisfies Friend\n","language":"ts","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#8839EF;--shiki-dark:#C678DD"},"children":[{"type":"text","value":"export"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#8839EF;--shiki-dark:#C678DD"},"children":[{"type":"text","value":" default"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#7C7F93;--shiki-dark:#ABB2BF"},"children":[{"type":"text","value":" {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#4C4F69;--shiki-dark:#E06C75"},"children":[{"type":"text","value":"    title"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#179299;--shiki-dark:#ABB2BF"},"children":[{"type":"text","value":":"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#40A02B;--shiki-dark:#98C379"},"children":[{"type":"text","value":" '博客名称'"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#7C7F93;--shiki-dark:#ABB2BF"},"children":[{"type":"text","value":",\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#4C4F69;--shiki-dark:#E06C75"},"children":[{"type":"text","value":"    desc"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#179299;--shiki-dark:#ABB2BF"},"children":[{"type":"text","value":":"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#40A02B;--shiki-dark:#98C379"},"children":[{"type":"text","value":" '博客描述'"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#7C7F93;--shiki-dark:#ABB2BF"},"children":[{"type":"text","value":",\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#4C4F69;--shiki-dark:#E06C75"},"children":[{"type":"text","value":"    link"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#179299;--shiki-dark:#ABB2BF"},"children":[{"type":"text","value":":"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#40A02B;--shiki-dark:#98C379"},"children":[{"type":"text","value":" '博客地址'"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#7C7F93;--shiki-dark:#ABB2BF"},"children":[{"type":"text","value":",\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#4C4F69;--shiki-dark:#E06C75"},"children":[{"type":"text","value":"    avatar"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#179299;--shiki-dark:#ABB2BF"},"children":[{"type":"text","value":":"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#40A02B;--shiki-dark:#98C379"},"children":[{"type":"text","value":" '个人头像'"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#7C7F93;--shiki-dark:#ABB2BF"},"children":[{"type":"text","value":",\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#7C7F93;--shiki-dark:#ABB2BF"},"children":[{"type":"text","value":"}"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#8839EF;--shiki-dark:#C678DD"},"children":[{"type":"text","value":" satisfies"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DF8E1D;--shiki-default-font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:inherit"},"children":[{"type":"text","value":" Friend\n"}]}]}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"信息可能会被适当修改，以保证展示效果"}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}"}]}],"toc":{"title":"","searchDepth":4,"depth":4,"links":[]}},"_type":"markdown","_id":"content:link.md","_source":"content","_file":"link.md","_stem":"link","_extension":"md","categories":["未分类"]},{"_path":"/2024/08/docker-deploy-outline","_dir":"08","_draft":false,"_partial":false,"_locale":"","title":"Docker部署Outline并使用Github作为OAuth服务","description":"手把手教你用Docker Compose搭建企业级知识库系统！从零开始部署Outline核心服务，搭配PostgreSQL和Redis黄金组合，通过Minio打造私有云存储。深度整合GitHub登录体系，揭秘生产级环境变量配置技巧，附带Nginx反向代理实战指南，让协作知识库安全落地。","date":"2024-08-07T11:24:26.000Z","updated":"2024-08-07T15:30:53.000Z","categories":["技术探索"],"tags":["Docker","Outline","部署服务"],"readingTime":{"text":"12 min read","minutes":11.89,"time":713400,"words":2378},"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"准备"},"children":[{"type":"text","value":"准备"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"一台服务器（建议至少1c2g）并安装Docker和Docker Compose"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"一个域名，建议为顶级域名"}]}]},{"type":"element","tag":"h2","props":{"id":"服务"},"children":[{"type":"text","value":"服务"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Outline（本体）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"PostgreSQL（数据库）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Redis（缓存数据库）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Minio（对象存储服务）"}]}]},{"type":"element","tag":"h2","props":{"id":"部署"},"children":[{"type":"text","value":"部署"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"请先安装Docker和Docker Compose服务，如果你安装1Panel作为服务器面板，那么已经自带了相关服务，部署分为三部分，第一部分部署Minio并设置文件对象存储服务，第二部分获取GitHub OAuth相关设置，第三部分部署Outline相关服务。"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"你也可以使用兼容AWS S3协议的对象存储服务作为Outline的对象存储，例如：CloudFlare R2，缤纷云，腾讯云OSS等"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果你使用了在线对象存储服务，则可跳过部署Minio，直接开始部署Outline。参考你的对象存储服务文档填写相关机密信息和Endpoint。"}]},{"type":"element","tag":"h3","props":{"id":"部署-minio"},"children":[{"type":"text","value":"部署 Minio"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"新建一个文件夹放入部署相关文件，比如"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/opt/Minio"}]},{"type":"text","value":"，使用以下命令新建相关文件夹并前往目录，然后新建相关文件。"}]},{"type":"element","tag":"pre","props":{"code":"mkdir /opt/Minio &amp;&amp; cd /opt/Minio\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"mkdir /opt/Minio &amp;&amp; cd /opt/Minio\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以下为"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker-compose.yml"}]},{"type":"text","value":"文件示例"}]},{"type":"element","tag":"pre","props":{"code":"version: 3\nservices:\n  minio:\n    image: ${DOCKER_MINIO_IMAGE_NAME}\n    env_file: ./.env # 指定环境变量文件\n    container_name: minio\n    ports:\n      - 9502:9000\n      - 9503:9001\n    restart: always\n    command: server /data --console-address :9000 --address :9001\n    environment:\n      MINIO_ROOT_USER: ${MINIO_ROOT_USER}\n      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}\n    logging:\n      options:\n        max-size: 5M\n        max-file: 10\n      driver: json-file\n    volumes:\n      - ./minio_data:/data\n    labels:\n      createdBy: Apps\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"version: 3\nservices:\n  minio:\n    image: ${DOCKER_MINIO_IMAGE_NAME}\n    env_file: ./.env # 指定环境变量文件\n    container_name: minio\n    ports:\n      - 9502:9000\n      - 9503:9001\n    restart: always\n    command: server /data --console-address :9000 --address :9001\n    environment:\n      MINIO_ROOT_USER: ${MINIO_ROOT_USER}\n      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}\n    logging:\n      options:\n        max-size: 5M\n        max-file: 10\n      driver: json-file\n    volumes:\n      - ./minio_data:/data\n    labels:\n      createdBy: Apps\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"你还需要在Minio放置Docker Compose文件的目录新建"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".env"}]},{"type":"text","value":"文件，并填入以下内容，其中相关账密信息建议自行修改提高安全性。"}]},{"type":"element","tag":"pre","props":{"code":"DOCKER_MINIO_IMAGE_NAME=minio/minio:RELEASE.2024-08-03T04-33-23Z.fips\nDOCKER_MINIO_ROOT_USER=admin\nDOCKER_MINIO_ROOT_PASSWORD=admin\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"DOCKER_MINIO_IMAGE_NAME=minio/minio:RELEASE.2024-08-03T04-33-23Z.fips\nDOCKER_MINIO_ROOT_USER=admin\nDOCKER_MINIO_ROOT_PASSWORD=admin\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"使用 Nginx 反向代理 minio 服务，其中 9502 端口为 minio 服务的 http 端口，9503 端口为 minio 服务的 API 端口。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"示例: "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"localhost:9502"}]},{"type":"text","value":"-> "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"https://minio.example.com"}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"localhost:9503"}]},{"type":"text","value":" -> "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"https://api-minio.example.com"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"部署完成后，请访问"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"https://minio.example.com"}]},{"type":"text","value":"，使用设定的用户名和密码登录。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"登录后，在设置中将"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Region"}]},{"type":"text","value":"设置为"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"cn-1"}]},{"type":"text","value":"，并且在"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Bucket"}]},{"type":"text","value":"中增加一个"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"bucket"}]},{"type":"text","value":"，命名为"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"outline"}]},{"type":"text","value":"用于存储"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"outline"}]},{"type":"text","value":"的数据，并把访问权限设置为"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"私有"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"可选操作"}]},{"type":"text","value":"："}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Bucket"}]},{"type":"text","value":"->"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"outline"}]},{"type":"text","value":"->"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Access"}]},{"type":"text","value":"->"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"User"}]},{"type":"text","value":"中增加一个用户，用于 outline 服务访问 minio 服务。"}]},{"type":"element","tag":"h3","props":{"id":"配置github-oauth"},"children":[{"type":"text","value":"配置GitHub OAuth"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"1.访问 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"GitHub"}]},{"type":"text","value":" 并登录 2.进入"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"OAuth Apps"}]},{"type":"text","value":" 页面（也可以依次点击：右上角头像 - Settings - Developer Settings - OAuth Apps） 3.点击"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"New OAuth App"}]},{"type":"text","value":" 4.填写 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Register a new OAuth application"}]},{"type":"text","value":" 表单"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Application name: 可自行填写，例如 outline"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Homepage URL: 填写 Outline 的主页 URL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authorization callback URL: 填写 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"<Homepage URL>/auth/oidc.callback"}]},{"type":"text","value":"，其中 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"<Homepage URL>"}]},{"type":"text","value":" 需要替换为Outline 的主页 URL"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"5.点击 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Register application"}]},{"type":"text","value":" 按钮，进入应用详情页面 6.点击"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Generate a new client secret"}]},{"type":"text","value":"按钮 7.记下 Client ID 和 Client secret，后面填写环境变量用（注意 Client secret 仅在创建时显示一次，后续不可再查询；如不慎遗失，可以再次点击按钮重新创建一个）"}]},{"type":"element","tag":"h3","props":{"id":"部署outline"},"children":[{"type":"text","value":"部署Outline"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"跟Minio一样，新建一个文件夹放入部署相关文件，比如"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/opt/Outline"}]},{"type":"text","value":"，使用以下命令新建相关文件夹并前往目录，然后新建相关文件。"}]},{"type":"element","tag":"pre","props":{"code":"mkdir /opt/Outline &amp;&amp; cd /opt/Outline\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"mkdir /opt/Outline &amp;&amp; cd /opt/Outline\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以下为"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker-compose.yml"}]},{"type":"text","value":"文件示例"}]},{"type":"element","tag":"pre","props":{"code":"version: 3.8\nservices:\n  outline:\n    image: ${DOCKER_OUTLINE_IMAGE_NAME}\n    env_file: ./.env\n    ports:\n      - 9303:3000\n    container_name: outline\n    restart: always\n    networks:\n      - outline\n    extra_hosts:\n      - ${DOCKER_OUTLINE_HOSTNAME}:0.0.0.0\n    depends_on:\n      - postgres\n      - redis\n\n  redis:\n    image: ${DOCKER_REDIS_IMAGE_NAME}\n    env_file: ./.env\n    volumes:\n      - ./redis/redis.conf:/redis.conf # 配置文件持久化\n    container_name: ${DOCKER_REDIS_HOST}\n    restart: always\n    networks:\n      - outline\n    command: [redis-server, /redis.conf] # 启动命令\n\n  postgres:\n    image: ${DOCKER_POSTGRES_IMAGE_NAME}\n    env_file: ./.env\n    environment:\n      POSTGRES_DB: ${DOCKER_POSTGRES_DB}\n      POSTGRES_USER: ${DOCKER_POSTGRES_USER}\n      POSTGRES_PASSWORD: ${DOCKER_POSTGRES_PASSWORD}\n    volumes:\n      - ./database-data:/var/lib/postgresql/data # 数据持久化\n    container_name: ${DOCKER_POSTGRES_HOST}\n    restart: always\n    networks:\n      - outline\n\nnetworks:\n  outline:\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"version: 3.8\nservices:\n  outline:\n    image: ${DOCKER_OUTLINE_IMAGE_NAME}\n    env_file: ./.env\n    ports:\n      - 9303:3000\n    container_name: outline\n    restart: always\n    networks:\n      - outline\n    extra_hosts:\n      - ${DOCKER_OUTLINE_HOSTNAME}:0.0.0.0\n    depends_on:\n      - postgres\n      - redis\n\n  redis:\n    image: ${DOCKER_REDIS_IMAGE_NAME}\n    env_file: ./.env\n    volumes:\n      - ./redis/redis.conf:/redis.conf # 配置文件持久化\n    container_name: ${DOCKER_REDIS_HOST}\n    restart: always\n    networks:\n      - outline\n    command: [redis-server, /redis.conf] # 启动命令\n\n  postgres:\n    image: ${DOCKER_POSTGRES_IMAGE_NAME}\n    env_file: ./.env\n    environment:\n      POSTGRES_DB: ${DOCKER_POSTGRES_DB}\n      POSTGRES_USER: ${DOCKER_POSTGRES_USER}\n      POSTGRES_PASSWORD: ${DOCKER_POSTGRES_PASSWORD}\n    volumes:\n      - ./database-data:/var/lib/postgresql/data # 数据持久化\n    container_name: ${DOCKER_POSTGRES_HOST}\n    restart: always\n    networks:\n      - outline\n\nnetworks:\n  outline:\n"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下面配置请逐行详细阅读，并根据实际情况修改，注意相关拼写！"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"跟Minio一样，在放置Docker Compose文件的目录新建"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".env"}]},{"type":"text","value":"文件，并复制填入以下内容："}]},{"type":"element","tag":"pre","props":{"code":"# 镜像设置\nDOCKER_OUTLINE_IMAGE_NAME=docker.getoutline.com/outlinewiki/outline:latest\nDOCKER_POSTGRES_IMAGE_NAME=postgres\nDOCKER_REDIS_IMAGE_NAME=redis\n\n# 容器名称\nDOCKER_REDIS_HOST=outline_redis\nDOCKER_POSTGRES_HOST=outline_postgres\n\n# postgres设置\nDOCKER_POSTGRES_USER=outline\nDOCKER_POSTGRES_PASSWORD=outline\nDOCKER_POSTGRES_DB=outline\n\n# GitHub OAuth设置，填写前面记下的信息\n\nGITHUB_CLIENT_ID=id\nGITHUB_CLIENT_SECRET=secret\n\n# Outline设置\nDOCKER_OUTLINE_HOSTNAME=docs.example.com # outline域名（需要自己使用Nginx反向代理）\n\n# –––––––––––––––– outline必需 –––––––––––––––-\n\nNODE_ENV=production\n\n# 生成一个十六进制编码的32字节随机密钥。你应该在终端使用 openssl rand -hex 32\n# 来生成一个随机值。\nSECRET_KEY=d8e45eahe5d298d976464888dea86c92b72dfa73aj8cb8903454205c02c732b3\n\n# 生成一个唯一的随机密钥。格式不重要，但你仍然可以使用\n# openssl rand -hex 32 在你的终端来产生这个。\nUTILS_SECRET=cf561a25absbd24c58e6d74edd726f60de11fd5c3fb8c289c725a48ab3b7b759\n\n# 对于生产环境，请将这些指向你的数据库，在开发中默认\n# 应该是开箱即用的。\nDATABASE_URL=postgres://${DOCKER_POSTGRES_USER}:${DOCKER_POSTGRES_PASSWORD}@${DOCKER_POSTGRES_HOST}:5432/${DOCKER_POSTGRES_DB}\nDATABASE_CONNECTION_POOL_MIN=\nDATABASE_CONNECTION_POOL_MAX=\n# 取消注释此项以禁用连接到Postgres的SSL\nPGSSLMODE=disable\n\n# 对于redis，你可以指定一个与ioredis兼容的url，像这样\nREDIS_URL=redis://${DOCKER_REDIS_HOST}:6379\n# 或者，如果你想提供额外的连接选项，\n# 使用一个base64编码的JSON连接选项对象。参考ioredis文档\n# 了解可用选项的列表。\n# 示例：使用Redis Sentinel来实现高可用性\n# {sentinels:[{host:sentinel-0,port:26379},{host:sentinel-1,port:26379}],name:mymaster}\n# REDIS_URL=ioredis://eyJzZW50aW5lbHMiOlt7Imhvc3QiOiJzZW50aW5lbC0wIiwicG9ydCI6MjYzNzl9LHsiaG9zdCI6InNlbnRpbmVsLTEiLCJwb3J0IjoyNjM3OX1dLCJuYW1lIjoibXltYXN0ZXIifQ==\n\n# URL应该指向完全合格的、公开可访问的URL。如果使用代理，\n# URL中的端口和PORT可能不同。\nURL=https://${DOCKER_OUTLINE_HOSTNAME}\nPORT=3000\n\n# 查看在运行一个独立的协作\n# 服务器的[文档](docs/SERVICES.md)，在正常操作中不需要设置这个。\n# COLLABORATION_URL=\n\n# 为了支持上传头像和文档附件的图片，必须提供\n# 一个兼容s3的存储。推荐使用AWS S3来实现冗余\n# 但如果你想保持所有文件存储在本地，可以使用\n# 例如minio (https://github.com/minio/minio) 的替代方案。\n\n# 设置S3的更详细指南可以在这里找到：\n# =&gt; https://wiki.generaloutline.com/share/125de1cc-9ff6-424b-8415-0d58c809a40f\n# 这里使用在minio部署时使用的用户名和密码，或者使用在上一节中可选操作中创建的用户，或者填写兼容AWS S3协议的对象存储信息\nAWS_ACCESS_KEY_ID=admin\nAWS_SECRET_ACCESS_KEY=admin\nAWS_REGION=cn-1\n# AWS_S3_ACCELERATE_URL=\nAWS_S3_UPLOAD_BUCKET_URL=https://api-minio.example.com\nAWS_S3_UPLOAD_BUCKET_NAME=outline\nAWS_S3_FORCE_PATH_STYLE=true\nAWS_S3_ACL=private\n\n# 指定要使用的存储系统。可能的值是s3或local之一。\n# 对于local，头像图片和文档附件将被保存在本地磁盘上。\nFILE_STORAGE=s3\n\n# 如果上面为FILE_STORAGE配置了local，则这设置了所有附件/图片的父目录\n# 确保该进程有权限创建\n# 这个路径，并且也有权限向其写入文件。\nFILE_STORAGE_LOCAL_ROOT_DIR=/var/lib/outline/data\n\n# 上传附件允许的最大大小。\nFILE_STORAGE_UPLOAD_MAX_SIZE=262144000\n\n# 覆盖文档导入的最大大小，通常这应该比文档附件的最大大小要低。\n# FILE_STORAGE_IMPORT_MAX_SIZE=\n\n# 覆盖工作区导入的最大大小，这些可能特别大\n# 并且文件是临时的，会在一段时间后自动删除。\n# FILE_STORAGE_WORKSPACE_IMPORT_MAX_SIZE=\n\n# –––––––––––––– 认证 ––––––––––––––\n\n# 第三方登录凭证，至少需要配置Google、Slack、\n# 或Microsoft中的一个才能进行工作安装，否则你将没有登录\n# 选项。\n\n# 要配置Slack认证，你需要在\n# =&gt; https://api.slack.com/apps\n# 创建一个应用程序\n#\n# 在配置Client ID时，添加一个重定向URL到OAuth &amp; Permissions：\n# https://&lt;URL&gt;/auth/slack.callback\n# SLACK_CLIENT_ID=从slack获取一个密钥\n# SLACK_CLIENT_SECRET=获取上面密钥的密钥\n\n# 要配置Google认证，你需要在\n# =&gt; https://console.cloud.google.com/apis/credentials\n# 创建一个OAuth客户端ID\n#\n# 在配置客户端ID时，添加一个已授权的重定向URI：\n# https://&lt;URL&gt;/auth/google.callback\n# GOOGLE_CLIENT_ID=\n# GOOGLE_CLIENT_SECRET=\n\n# 要配置Microsoft/Azure认证，你需要创建一个OAuth客户端。见\n# 指南了解如何设置你的Azure应用：\n# =&gt; https://wiki.generaloutline.com/share/dfa77e56-d4d2-4b51-8ff8-84ea6608faa4\n# AZURE_CLIENT_ID=\n# AZURE_CLIENT_SECRET=\n# AZURE_RESOURCE_APP_ID=\n\n# GitHub认证\n\n# 填写 GitHub OAuth application 的 Client ID 和 Client secret\nOIDC_CLIENT_ID=${GITHUB_CLIENT_ID}\nOIDC_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}\n\n# 填写 GitHub 的 OAuth endpoint，参考 https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/authorizing-oauth-apps#web-application-flow\nOIDC_AUTH_URI=https://github.com/login/oauth/authorize\nOIDC_TOKEN_URI=https://github.com/login/oauth/access_token\n\n# OAuth 授权的权限范围\nOIDC_SCOPES=read:user user:email\n\n# 通过 GitHub API 获取用户基本信息\nOIDC_USERINFO_URI=https://api.github.com/user\nOIDC_USERNAME_CLAIM=name\n\n# 让登录界面显示为“使用 GitHub 继续”\nOIDC_DISPLAY_NAME=GitHub\n\n# –––––––––––––––– 可选 ––––––––––––––––\n\n# 为HTTPS终止提供Base64编码的私钥和证书。仅当你不使用外部反向代理时才需要此项。见文档：\n# https://wiki.generaloutline.com/share/1c922644-40d8-41fe-98f9-df2b67239d45\n# SSL_KEY=\n# SSL_CERT=\n\n# 如果使用Cloudfront/Cloudflare分发或类似的服务，可以在下面设置。\n# 这将导致javascript、样式表和图像的路径被更新为\n# 在CDN_URL中定义的主机名。在CDN配置中，原始服务器\n# 应设置为与URL相同。\n# CDN_URL=\n\n# 在生产环境中自动重定向到https。默认值为true，但如果你能确保\n# SSL在外部负载均衡器处终止，可以设置为false。\nFORCE_HTTPS=false\n\n# 让安装通过发送匿名统计数据到\n# 维护者来检查更新\nENABLE_UPDATES=false\n\n# 应该启动多少个进程。作为一个合理的规则，将你服务器\n# 可用内存除以512来大致估算\nWEB_CONCURRENCY=1\n\n# 如果你的反向代理已经记录了传入的http\n# 请求，而这变得重复，你可以删除这一行\n# DEBUG=http\n\n# 配置服务器日志的最低严重性级别。应该是\n# error, warn, info, http, verbose, debug 和 silly 之一\nLOG_LEVEL=info\n\n# 为了完整的Slack集成，包括搜索和发布到频道，还需要\n# 以下配置，更多细节\n# =&gt; https://wiki.generaloutline.com/share/be25efd1-b3ef-4450-b8e5-c4a4fc11e02a\n#\n# SLACK_VERIFICATION_TOKEN=你的令牌\n# SLACK_APP_ID=A0XXXXXXX\n# SLACK_MESSAGE_ACTIONS=true\n\n# 可选地启用Sentry (sentry.io) 来跟踪错误和性能，\n# 并可选地在UI中添加一个Sentry代理隧道以绕过广告拦截器：\n# https://docs.sentry.io/platforms/javascript/troubleshooting/#using-the-tunnel-option)\n# SENTRY_DSN=\n# SENTRY_TUNNEL=\n\n# 为了支持发送出站的事务性电子邮件，如文档已更新或\n# 你被邀请了，你需要提供SMTP服务器的认证\n# SMTP_HOST=smtp.office365.com\n# SMTP_PORT=587\n# SMTP_USERNAME=\n# SMTP_PASSWORD=\n# SMTP_FROM_EMAIL=\n# SMTP_REPLY_EMAIL=\n# SMTP_TLS_CIPHERS=\n# SMTP_SECURE=false\n\n# 默认界面语言。见translate.getoutline.com查看\n# 可用的语言代码及其大致翻译的百分比。\nDEFAULT_LANGUAGE=zh_CN\n\n# 可选地启用应用程序Web服务器的速率限制器\nRATE_LIMITER_ENABLED=true\n\n# 为速率限制器配置默认的限流参数\nRATE_LIMITER_REQUESTS=1000\nRATE_LIMITER_DURATION_WINDOW=60\n\n# Iframely API配置\n# IFRAMELY_URL=\n# IFRAMELY_API_KEY=\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# 镜像设置\nDOCKER_OUTLINE_IMAGE_NAME=docker.getoutline.com/outlinewiki/outline:latest\nDOCKER_POSTGRES_IMAGE_NAME=postgres\nDOCKER_REDIS_IMAGE_NAME=redis\n\n# 容器名称\nDOCKER_REDIS_HOST=outline_redis\nDOCKER_POSTGRES_HOST=outline_postgres\n\n# postgres设置\nDOCKER_POSTGRES_USER=outline\nDOCKER_POSTGRES_PASSWORD=outline\nDOCKER_POSTGRES_DB=outline\n\n# GitHub OAuth设置，填写前面记下的信息\n\nGITHUB_CLIENT_ID=id\nGITHUB_CLIENT_SECRET=secret\n\n# Outline设置\nDOCKER_OUTLINE_HOSTNAME=docs.example.com # outline域名（需要自己使用Nginx反向代理）\n\n# –––––––––––––––– outline必需 –––––––––––––––-\n\nNODE_ENV=production\n\n# 生成一个十六进制编码的32字节随机密钥。你应该在终端使用 openssl rand -hex 32\n# 来生成一个随机值。\nSECRET_KEY=d8e45eahe5d298d976464888dea86c92b72dfa73aj8cb8903454205c02c732b3\n\n# 生成一个唯一的随机密钥。格式不重要，但你仍然可以使用\n# openssl rand -hex 32 在你的终端来产生这个。\nUTILS_SECRET=cf561a25absbd24c58e6d74edd726f60de11fd5c3fb8c289c725a48ab3b7b759\n\n# 对于生产环境，请将这些指向你的数据库，在开发中默认\n# 应该是开箱即用的。\nDATABASE_URL=postgres://${DOCKER_POSTGRES_USER}:${DOCKER_POSTGRES_PASSWORD}@${DOCKER_POSTGRES_HOST}:5432/${DOCKER_POSTGRES_DB}\nDATABASE_CONNECTION_POOL_MIN=\nDATABASE_CONNECTION_POOL_MAX=\n# 取消注释此项以禁用连接到Postgres的SSL\nPGSSLMODE=disable\n\n# 对于redis，你可以指定一个与ioredis兼容的url，像这样\nREDIS_URL=redis://${DOCKER_REDIS_HOST}:6379\n# 或者，如果你想提供额外的连接选项，\n# 使用一个base64编码的JSON连接选项对象。参考ioredis文档\n# 了解可用选项的列表。\n# 示例：使用Redis Sentinel来实现高可用性\n# {sentinels:[{host:sentinel-0,port:26379},{host:sentinel-1,port:26379}],name:mymaster}\n# REDIS_URL=ioredis://eyJzZW50aW5lbHMiOlt7Imhvc3QiOiJzZW50aW5lbC0wIiwicG9ydCI6MjYzNzl9LHsiaG9zdCI6InNlbnRpbmVsLTEiLCJwb3J0IjoyNjM3OX1dLCJuYW1lIjoibXltYXN0ZXIifQ==\n\n# URL应该指向完全合格的、公开可访问的URL。如果使用代理，\n# URL中的端口和PORT可能不同。\nURL=https://${DOCKER_OUTLINE_HOSTNAME}\nPORT=3000\n\n# 查看在运行一个独立的协作\n# 服务器的[文档](docs/SERVICES.md)，在正常操作中不需要设置这个。\n# COLLABORATION_URL=\n\n# 为了支持上传头像和文档附件的图片，必须提供\n# 一个兼容s3的存储。推荐使用AWS S3来实现冗余\n# 但如果你想保持所有文件存储在本地，可以使用\n# 例如minio (https://github.com/minio/minio) 的替代方案。\n\n# 设置S3的更详细指南可以在这里找到：\n# =&gt; https://wiki.generaloutline.com/share/125de1cc-9ff6-424b-8415-0d58c809a40f\n# 这里使用在minio部署时使用的用户名和密码，或者使用在上一节中可选操作中创建的用户，或者填写兼容AWS S3协议的对象存储信息\nAWS_ACCESS_KEY_ID=admin\nAWS_SECRET_ACCESS_KEY=admin\nAWS_REGION=cn-1\n# AWS_S3_ACCELERATE_URL=\nAWS_S3_UPLOAD_BUCKET_URL=https://api-minio.example.com\nAWS_S3_UPLOAD_BUCKET_NAME=outline\nAWS_S3_FORCE_PATH_STYLE=true\nAWS_S3_ACL=private\n\n# 指定要使用的存储系统。可能的值是s3或local之一。\n# 对于local，头像图片和文档附件将被保存在本地磁盘上。\nFILE_STORAGE=s3\n\n# 如果上面为FILE_STORAGE配置了local，则这设置了所有附件/图片的父目录\n# 确保该进程有权限创建\n# 这个路径，并且也有权限向其写入文件。\nFILE_STORAGE_LOCAL_ROOT_DIR=/var/lib/outline/data\n\n# 上传附件允许的最大大小。\nFILE_STORAGE_UPLOAD_MAX_SIZE=262144000\n\n# 覆盖文档导入的最大大小，通常这应该比文档附件的最大大小要低。\n# FILE_STORAGE_IMPORT_MAX_SIZE=\n\n# 覆盖工作区导入的最大大小，这些可能特别大\n# 并且文件是临时的，会在一段时间后自动删除。\n# FILE_STORAGE_WORKSPACE_IMPORT_MAX_SIZE=\n\n# –––––––––––––– 认证 ––––––––––––––\n\n# 第三方登录凭证，至少需要配置Google、Slack、\n# 或Microsoft中的一个才能进行工作安装，否则你将没有登录\n# 选项。\n\n# 要配置Slack认证，你需要在\n# =&gt; https://api.slack.com/apps\n# 创建一个应用程序\n#\n# 在配置Client ID时，添加一个重定向URL到OAuth &amp; Permissions：\n# https://&lt;URL&gt;/auth/slack.callback\n# SLACK_CLIENT_ID=从slack获取一个密钥\n# SLACK_CLIENT_SECRET=获取上面密钥的密钥\n\n# 要配置Google认证，你需要在\n# =&gt; https://console.cloud.google.com/apis/credentials\n# 创建一个OAuth客户端ID\n#\n# 在配置客户端ID时，添加一个已授权的重定向URI：\n# https://&lt;URL&gt;/auth/google.callback\n# GOOGLE_CLIENT_ID=\n# GOOGLE_CLIENT_SECRET=\n\n# 要配置Microsoft/Azure认证，你需要创建一个OAuth客户端。见\n# 指南了解如何设置你的Azure应用：\n# =&gt; https://wiki.generaloutline.com/share/dfa77e56-d4d2-4b51-8ff8-84ea6608faa4\n# AZURE_CLIENT_ID=\n# AZURE_CLIENT_SECRET=\n# AZURE_RESOURCE_APP_ID=\n\n# GitHub认证\n\n# 填写 GitHub OAuth application 的 Client ID 和 Client secret\nOIDC_CLIENT_ID=${GITHUB_CLIENT_ID}\nOIDC_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}\n\n# 填写 GitHub 的 OAuth endpoint，参考 https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/authorizing-oauth-apps#web-application-flow\nOIDC_AUTH_URI=https://github.com/login/oauth/authorize\nOIDC_TOKEN_URI=https://github.com/login/oauth/access_token\n\n# OAuth 授权的权限范围\nOIDC_SCOPES=read:user user:email\n\n# 通过 GitHub API 获取用户基本信息\nOIDC_USERINFO_URI=https://api.github.com/user\nOIDC_USERNAME_CLAIM=name\n\n# 让登录界面显示为“使用 GitHub 继续”\nOIDC_DISPLAY_NAME=GitHub\n\n# –––––––––––––––– 可选 ––––––––––––––––\n\n# 为HTTPS终止提供Base64编码的私钥和证书。仅当你不使用外部反向代理时才需要此项。见文档：\n# https://wiki.generaloutline.com/share/1c922644-40d8-41fe-98f9-df2b67239d45\n# SSL_KEY=\n# SSL_CERT=\n\n# 如果使用Cloudfront/Cloudflare分发或类似的服务，可以在下面设置。\n# 这将导致javascript、样式表和图像的路径被更新为\n# 在CDN_URL中定义的主机名。在CDN配置中，原始服务器\n# 应设置为与URL相同。\n# CDN_URL=\n\n# 在生产环境中自动重定向到https。默认值为true，但如果你能确保\n# SSL在外部负载均衡器处终止，可以设置为false。\nFORCE_HTTPS=false\n\n# 让安装通过发送匿名统计数据到\n# 维护者来检查更新\nENABLE_UPDATES=false\n\n# 应该启动多少个进程。作为一个合理的规则，将你服务器\n# 可用内存除以512来大致估算\nWEB_CONCURRENCY=1\n\n# 如果你的反向代理已经记录了传入的http\n# 请求，而这变得重复，你可以删除这一行\n# DEBUG=http\n\n# 配置服务器日志的最低严重性级别。应该是\n# error, warn, info, http, verbose, debug 和 silly 之一\nLOG_LEVEL=info\n\n# 为了完整的Slack集成，包括搜索和发布到频道，还需要\n# 以下配置，更多细节\n# =&gt; https://wiki.generaloutline.com/share/be25efd1-b3ef-4450-b8e5-c4a4fc11e02a\n#\n# SLACK_VERIFICATION_TOKEN=你的令牌\n# SLACK_APP_ID=A0XXXXXXX\n# SLACK_MESSAGE_ACTIONS=true\n\n# 可选地启用Sentry (sentry.io) 来跟踪错误和性能，\n# 并可选地在UI中添加一个Sentry代理隧道以绕过广告拦截器：\n# https://docs.sentry.io/platforms/javascript/troubleshooting/#using-the-tunnel-option)\n# SENTRY_DSN=\n# SENTRY_TUNNEL=\n\n# 为了支持发送出站的事务性电子邮件，如文档已更新或\n# 你被邀请了，你需要提供SMTP服务器的认证\n# SMTP_HOST=smtp.office365.com\n# SMTP_PORT=587\n# SMTP_USERNAME=\n# SMTP_PASSWORD=\n# SMTP_FROM_EMAIL=\n# SMTP_REPLY_EMAIL=\n# SMTP_TLS_CIPHERS=\n# SMTP_SECURE=false\n\n# 默认界面语言。见translate.getoutline.com查看\n# 可用的语言代码及其大致翻译的百分比。\nDEFAULT_LANGUAGE=zh_CN\n\n# 可选地启用应用程序Web服务器的速率限制器\nRATE_LIMITER_ENABLED=true\n\n# 为速率限制器配置默认的限流参数\nRATE_LIMITER_REQUESTS=1000\nRATE_LIMITER_DURATION_WINDOW=60\n\n# Iframely API配置\n# IFRAMELY_URL=\n# IFRAMELY_API_KEY=\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"启动服务后，使用 Nginx 反向代理 Outline 服务，其中 9303 端口为 outline 服务的 http 端口"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"示例: "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"localhost:9303"}]},{"type":"text","value":" -> "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"https://docs.example.com"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"浏览器访问你部署的Outline主页（例如"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"https://docs.example.com"}]},{"type":"text","value":"），选择"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"使用GitHub登录"}]},{"type":"text","value":"，如果配置正确，会跳到GitHub的授权页面，使用你的"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"GitHub"}]},{"type":"text","value":"相关信息授权登录即可。"}]}],"toc":{"title":"","searchDepth":4,"depth":4,"links":[{"id":"准备","depth":2,"text":"准备"},{"id":"服务","depth":2,"text":"服务"},{"id":"部署","depth":2,"text":"部署","children":[{"id":"部署-minio","depth":3,"text":"部署 Minio"},{"id":"配置github-oauth","depth":3,"text":"配置GitHub OAuth"},{"id":"部署outline","depth":3,"text":"部署Outline"}]}]}},"_type":"markdown","_id":"content:posts:2024:08:docker-deploy-outline.md","_source":"content","_file":"posts/2024/08/docker-deploy-outline.md","_stem":"posts/2024/08/docker-deploy-outline","_extension":"md","_original_dir":"/posts"},{"_path":"/2024/09/1panel-appstore-refused","_dir":"09","_draft":false,"_partial":false,"_locale":"","title":"记一次被1Panel官方应用商店拒绝合并","description":"记录一次1Panel官方应用商店仓库提交应用被拒绝合并的情况","date":"2024-09-07T11:24:26.000Z","updated":"2024-09-07T15:30:53.000Z","categories":["技术探索"],"tags":["1Panel","Docker"],"readingTime":{"text":"5 min read","minutes":4.585,"time":275100,"words":917},"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我也算是个1Panel老用户了，从他们还没出Lts版本之前我就一直在用，它们的应用商店是可以通过本地撰写配置文件来实现自定义安装的，因此你可以导入第三方应用商店仓库来帮助你安装更多的应用，官方的应用商店也提供了途径允许你去自己提交应用。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"理论只要项目满足下列条件，就可以尝试提交："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"活跃的开源项目"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有官方Docker镜像"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"项目比较知名（GitHub高Star）"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"然后最近在研究Ghost博客系统，它可以通过Docker部署，这玩意在国外非常出名，但是国内生态很一般，甚至官方中文也没有，网上中文教程也不是很多。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我想了想，本着一个促进传播的想法，我写了个1Panel应用商店可用的配置文件，本地也进行了安装测试，工作很完美！可以一键安装并自动设置其要求的数据库（MySQL，MariaDB），各种设置做的总体来说挺易用的，毕竟1Panel应用商店的交互逻辑本身就还不错。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"看了下Ghost应该也算满足官方要求的上面条件，也希望能有更多需要这个博客系统的人能更加便捷的安装它，就整理了一下去提交了一个官方应用商店仓库的"},{"type":"element","tag":"a","props":{"href":"https://github.com/1Panel-dev/appstore/pull/2125","rel":["nofollow"]},"children":[{"type":"text","value":"GitHub拉取请求"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"大概是过了两三天吧，收到了回信："}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"https://r2-file.101045700.xyz/2024/image_editor_output_image2047887735-17266569364718465991064078587678.webp"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Emm，虽然我赞同你的实话实说，但是这个理由从逻辑上似乎还是难以说通。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"直接说的话其实有些扶持自家产品之嫌了，不愿意其他竞品上架。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我们不做情绪化的理解，理性点说的话，不大合适。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"首先，如我前面所说，Ghost博客系统在国内的生态很差，简体中文都是爱好者后期添加的，其他主题和插件更是稀缺。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"而Halo在国内的生态可以说一直在稳步发展，可以说在寻找自己用的博客系统的用户应该不会选择去绕过Halo，去硬选Ghost博客系统。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其次，这样很容易寒了用户的心，我整理写出配置文件大概花了一个小时吧，也不算特别费事。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但是在基本条件都符合的情况下你采取这样一个方式拒绝，属实是不大合适，格局有那么一点的小。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"多的我也不说了，1Panel是个优秀的产品，我们不能奢求它一定成为我们希望的样子。但我希望它不要被绑上商业化的标签，不要再活成第二个宝塔。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"补充："}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"有人说我可以提交到第三方应用商店仓库，比如"},{"type":"element","tag":"a","props":{"href":"https://github.com/okxlin/appstore","rel":["nofollow"]},"children":[{"type":"text","value":"okxlin/appstore"}]},{"type":"text","value":"，但是我说一下我对它的评价，只是个人主观观点。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在我看来这个第三方应用商店仓库有那么一些的乱，各种提交的应用有些质量不大行，起码配置文件和介绍写的不怎么规范。我在之前曾经为其贡献过Mix-Space和NodeBB，后面我在自己拉取使用的时候感觉是真的乱，包括一些与官方应用商店重叠的应用，以及里面部分应用你居然还需要到目录下手动docker compose -d 来启动。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我感谢为此做出贡献的所有人们，但我应该不会去使用它，后面我打算自己写一个干净一些的商店仓库集合。"}]}],"toc":{"title":"","searchDepth":4,"depth":4,"links":[]}},"_type":"markdown","_id":"content:posts:2024:09:1panel-appstore-refused.md","_source":"content","_file":"posts/2024/09/1panel-appstore-refused.md","_stem":"posts/2024/09/1panel-appstore-refused","_extension":"md","_original_dir":"/posts"},{"_path":"/2024/10/shiroi-docker-deployment","_dir":"10","_draft":false,"_partial":false,"_locale":"","title":"GitHub Action构建Shiroi Docker镜像","description":"Mix-Space，它属于前后端分离博客系统，你可以把前端和后端分离部署在不同的地方，在之前你可以把前端部署在Vercel云函数上，达到缓解服务器压力和提升访问速度的效果。","date":"2024-10-21T11:24:26.000Z","categories":["技术探索"],"tags":["Mix-Space","Docker"],"readingTime":{"text":"10 min read","minutes":9.31,"time":558600,"words":1862},"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"前言"},"children":[{"type":"text","value":"前言"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mix-Space，它属于前后端分离博客系统，你可以把前端和后端分离部署在不同的地方，在之前你可以把前端部署在Vercel云函数上，达到缓解服务器压力和提升访问速度的效果。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但是随着Vercel调整Hobby免费套餐的额度，Vercel免费套餐已经越来越不够用了，这个时候我们可以通过Docker将Shiro部署到自己的服务器上来解决问题，但是我在使用Shiroi（Shiro的闭源捐赠版）的时候遇到了问题：原作者innei并没有提供它的可用Docker镜像。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这样的话你就需要在自己服务器上对Shiroi进行构建，但是对于配置较低（低于2G内存）的云服务器来说这是比较困难的，基本上会导致服务器爆内存假死。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Innei给出的解决方案是使用Github Action完成构建，将构建后的产物直接推送到你的服务器上，达到缓解服务器压力的作用。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但是这个方案在我看来存在以下局限性："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"需要你在服务器安装相关依赖：Node.js，PM2，Sharp，但是部分用户（比如我）使用的是1Panel管理服务器，不大想要在服务器安装额外依赖。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"输出目录被固定在了服务器的"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"root"}]},{"type":"text","value":"目录，不好更改。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"你需要向GitHub仓库存储你的服务器登录信息，比如SSH密钥等。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"项目本身有回滚功能，但一般用户可能不需要此功能，也会占用大量的服务器空间。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"总之我是不大想要折腾这套方案，那么有啥更好的办法嘛？"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"欸，你说Docker部署不就行了，虽然Innei没给你Docker镜像，但是我们可以自己造啊！"}]},{"type":"element","tag":"h2","props":{"id":"思路"},"children":[{"type":"text","value":"思路"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我们当然不能直接在自己服务器上构建镜像，构建Docker镜像产生的资源占用并不会比直接构建站点静态文件要少。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"那我们可以把innei的思路拿过来用一下，用Github Action进行Docker镜像构建不就可以了？"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但是光构建也不行，你还需要找个地方把镜像放下来，而我也不想使用直接推送服务器的办法，这也需要在Github这里存储服务器登录信息，虽然是"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"secret"}]},{"type":"text","value":"存储应该能保证安全性，但是谁又能说准这个事情呢？"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"而且部分用户服务器在国内，Github Action的主动推送速度也不见得一定多好。"}]},{"type":"element","tag":"h2","props":{"id":"选择"},"children":[{"type":"text","value":"选择"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"最后我的选择方案是使用Github Action进行构建，然后将镜像传到Github Packages，Github Packages默认会对私有库镜像进行私有，也保障镜像不会直接泄露。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Docker 对镜像仓库的管理共分为 3 个层级，依次是命名空间 (namespace) 、镜像仓库 (repository) 和 标签 (tag)："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"命名空间以名称作为标识，一个命名空间可管理多个镜像仓库。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"镜像仓库通过名称标识，一个镜像仓库中可保存一个镜像（image）的多个版本。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"镜像版本通过标签进行区分。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"基于以上层级关系，一个完整的镜像路径 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"{namespace}/{repository}:{tag}"}]},{"type":"text","value":" 可以唯一确定一个镜像。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"新建一个私有库（注意一定是私有仓库）并在"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".github/workflows"}]},{"type":"text","value":"目录下新建yml工作流文件，填入如下内容："}]},{"type":"element","tag":"pre","props":{"code":"name: Docker\n\non:\n  push:\n    branches:\n      - main\n  schedule:\n     - cron: '0 3 * * *'\n\n  repository_dispatch:\n    types: [trigger-workflow]\n\npermissions: write-all\nconcurrency:\n  group: ${{ github.workflow }}-${{ github.ref }}\n  cancel-in-progress: true\n\nenv:\n  PNPM_VERSION: 9.x.x\n  HASH_FILE: build_hash\n\njobs:\n  prepare:\n    name: Prepare\n    runs-on: ubuntu-latest\n    if: ${{ github.event.head_commit.message != 'Update hash file' }}\n\n    outputs:\n      hash_content: ${{ steps.read_hash.outputs.hash_content }}\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Read HASH_FILE content\n        id: read_hash\n        run: |\n          content=$(cat ${{ env.HASH_FILE }}) || true\n          echo \"hash_content=$content\" >> \"$GITHUB_OUTPUT\"\n  check:\n    name: Check Should Rebuild\n    runs-on: ubuntu-latest\n    needs: prepare\n    outputs:\n      canceled: ${{ steps.use_content.outputs.canceled }}\n\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          repository: innei-dev/shiroi\n          token: ${{ secrets.GH_PAT }}\n          fetch-depth: 0\n          lfs: true\n\n      - name: Use content from prev job and compare\n        id: use_content\n        env:\n          FILE_HASH: ${{ needs.prepare.outputs.hash_content }}\n        run: |\n          file_hash=$FILE_HASH\n          current_hash=$(git rev-parse --short HEAD)\n          echo \"File Hash: $file_hash\"\n          echo \"Current Git Hash: $current_hash\"\n          if [ \"$file_hash\" == \"$current_hash\" ]; then\n            echo \"Hashes match. Stopping workflow.\"\n            echo \"canceled=true\" >> $GITHUB_OUTPUT\n          else\n            echo \"Hashes do not match. Continuing workflow.\"\n          fi\n\n  build:\n    name: Build artifact\n    runs-on: ubuntu-latest\n    needs: check\n    if: ${{needs.check.outputs.canceled != 'true'}}\n\n    outputs:\n      sha_short: ${{ steps.store.outputs.sha_short }}\n      branch: ${{ steps.store.outputs.branch }}\n\n    steps:\n    - uses: actions/checkout@v4\n      with:\n        repository: innei-dev/shiroi\n        token: ${{ secrets.GH_PAT }}\n        fetch-depth: 0\n        lfs: true\n\n    - name: Login to Registry\n      uses: docker/login-action@v3\n      with:\n        registry: ghcr.io\n        username: ${{ github.actor }}\n        password: ${{ secrets.GITHUB_TOKEN }}\n\n    - name: Build Docker Image\n      run: |\n        docker build -t ghcr.io/${{ secrets.DOCKER_NAMESPACE }}/shiroi:latest .\n\n    - name: Push Docker Image to Github\n      run: |\n        docker push ghcr.io/${{ secrets.DOCKER_NAMESPACE }}/shiroi:latest\n\n    - name: Store artifact commit version\n      shell: bash\n      id: store\n      run: |\n        sha_short=$(git rev-parse --short HEAD)\n        branch_name=$(git rev-parse --abbrev-ref HEAD)\n        echo \"sha_short=$sha_short\" >> \"$GITHUB_OUTPUT\"\n        echo \"branch=$branch_name\" >> \"$GITHUB_OUTPUT\"\n  store:\n    name: Store artifact commit version\n    runs-on: ubuntu-latest\n    needs: [build]\n    steps:\n\n      - name: Checkout\n        uses: actions/checkout@v4\n        with:\n          persist-credentials: false\n          fetch-depth: 0\n\n      - name: Use outputs from build\n        env:\n          SHA_SHORT: ${{ needs.build.outputs.sha_short }}\n          BRANCH: ${{ needs.build.outputs.branch }}\n        run: |\n          echo \"SHA Short from build: $SHA_SHORT\"\n          echo \"Branch from build: $BRANCH\"\n      - name: Write hash to file\n        env:\n          SHA_SHORT: ${{ needs.build.outputs.sha_short }}\n\n        run: |\n          echo \"SHA_SHORT: $SHA_SHORT\"\n          echo $SHA_SHORT > ${{ env.HASH_FILE }}\n      - name: Commit files\n        run: |\n          git config --local user.email \"41898282+github-actions[bot]@users.noreply.github.com\"\n          git config --local user.name \"github-actions[bot]\"\n          git add ${{ env.HASH_FILE }}\n          git status\n          git commit -a -m \"Update hash file\"\n      - name: Push changes\n        uses: ad-m/github-push-action@master\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          branch: ${{ github.ref }}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"name: Docker\n\non:\n  push:\n    branches:\n      - main\n  schedule:\n     - cron: '0 3 * * *'\n\n  repository_dispatch:\n    types: [trigger-workflow]\n\npermissions: write-all\nconcurrency:\n  group: ${{ github.workflow }}-${{ github.ref }}\n  cancel-in-progress: true\n\nenv:\n  PNPM_VERSION: 9.x.x\n  HASH_FILE: build_hash\n\njobs:\n  prepare:\n    name: Prepare\n    runs-on: ubuntu-latest\n    if: ${{ github.event.head_commit.message != 'Update hash file' }}\n\n    outputs:\n      hash_content: ${{ steps.read_hash.outputs.hash_content }}\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Read HASH_FILE content\n        id: read_hash\n        run: |\n          content=$(cat ${{ env.HASH_FILE }}) || true\n          echo \"hash_content=$content\" >> \"$GITHUB_OUTPUT\"\n  check:\n    name: Check Should Rebuild\n    runs-on: ubuntu-latest\n    needs: prepare\n    outputs:\n      canceled: ${{ steps.use_content.outputs.canceled }}\n\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          repository: innei-dev/shiroi\n          token: ${{ secrets.GH_PAT }}\n          fetch-depth: 0\n          lfs: true\n\n      - name: Use content from prev job and compare\n        id: use_content\n        env:\n          FILE_HASH: ${{ needs.prepare.outputs.hash_content }}\n        run: |\n          file_hash=$FILE_HASH\n          current_hash=$(git rev-parse --short HEAD)\n          echo \"File Hash: $file_hash\"\n          echo \"Current Git Hash: $current_hash\"\n          if [ \"$file_hash\" == \"$current_hash\" ]; then\n            echo \"Hashes match. Stopping workflow.\"\n            echo \"canceled=true\" >> $GITHUB_OUTPUT\n          else\n            echo \"Hashes do not match. Continuing workflow.\"\n          fi\n\n  build:\n    name: Build artifact\n    runs-on: ubuntu-latest\n    needs: check\n    if: ${{needs.check.outputs.canceled != 'true'}}\n\n    outputs:\n      sha_short: ${{ steps.store.outputs.sha_short }}\n      branch: ${{ steps.store.outputs.branch }}\n\n    steps:\n    - uses: actions/checkout@v4\n      with:\n        repository: innei-dev/shiroi\n        token: ${{ secrets.GH_PAT }}\n        fetch-depth: 0\n        lfs: true\n\n    - name: Login to Registry\n      uses: docker/login-action@v3\n      with:\n        registry: ghcr.io\n        username: ${{ github.actor }}\n        password: ${{ secrets.GITHUB_TOKEN }}\n\n    - name: Build Docker Image\n      run: |\n        docker build -t ghcr.io/${{ secrets.DOCKER_NAMESPACE }}/shiroi:latest .\n\n    - name: Push Docker Image to Github\n      run: |\n        docker push ghcr.io/${{ secrets.DOCKER_NAMESPACE }}/shiroi:latest\n\n    - name: Store artifact commit version\n      shell: bash\n      id: store\n      run: |\n        sha_short=$(git rev-parse --short HEAD)\n        branch_name=$(git rev-parse --abbrev-ref HEAD)\n        echo \"sha_short=$sha_short\" >> \"$GITHUB_OUTPUT\"\n        echo \"branch=$branch_name\" >> \"$GITHUB_OUTPUT\"\n  store:\n    name: Store artifact commit version\n    runs-on: ubuntu-latest\n    needs: [build]\n    steps:\n\n      - name: Checkout\n        uses: actions/checkout@v4\n        with:\n          persist-credentials: false\n          fetch-depth: 0\n\n      - name: Use outputs from build\n        env:\n          SHA_SHORT: ${{ needs.build.outputs.sha_short }}\n          BRANCH: ${{ needs.build.outputs.branch }}\n        run: |\n          echo \"SHA Short from build: $SHA_SHORT\"\n          echo \"Branch from build: $BRANCH\"\n      - name: Write hash to file\n        env:\n          SHA_SHORT: ${{ needs.build.outputs.sha_short }}\n\n        run: |\n          echo \"SHA_SHORT: $SHA_SHORT\"\n          echo $SHA_SHORT > ${{ env.HASH_FILE }}\n      - name: Commit files\n        run: |\n          git config --local user.email \"41898282+github-actions[bot]@users.noreply.github.com\"\n          git config --local user.name \"github-actions[bot]\"\n          git add ${{ env.HASH_FILE }}\n          git status\n          git commit -a -m \"Update hash file\"\n      - name: Push changes\n        uses: ad-m/github-push-action@master\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          branch: ${{ github.ref }}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这样就可以实现简单的构建并上传Github Registry镜像，需要你在仓库的"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"secret"}]},{"type":"text","value":"设置中配置一个机密变量："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"GH_PAT"}]},{"type":"text","value":"：有权限访问Shiroi仓库的Github Access Token。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DOCKER_NAMESPACE"}]},{"type":"text","value":"：镜像的命名空间，其中不要有任何大写字符，为了好记和防冲突可能性尽量选择使用个人Github用户名的小写字符。"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"由于 GitHub action 的限制，当一个仓库在 3 个月内没有活动时，工作流会被禁用。\n@innei"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所以我们采用innei的办法，每次构建结束后上传一个存储哈希值的文件，来保持仓库活动，而且在构建前对仓库哈希值进行对比，也不会出现重复构建的情况。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"参考上面修改环境"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"secret"}]},{"type":"text","value":"后，运行工作流（注意先开启你仓库设置中Github Action写入文件的权限），这样就会生成哈希值文件并且构建镜像了。"}]},{"type":"element","tag":"h2","props":{"id":"使用"},"children":[{"type":"text","value":"使用"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"保存工作流文件，等待运行完毕，你应该可以在仓库侧边"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Packages"}]},{"type":"text","value":"或者个人Github账号主页的"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Package"}]},{"type":"text","value":"里找到镜像文件。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在你个人服务器上拉取镜像前，你需要先在你的服务器上配置Docker私有仓库，值得注意的是你的Gitea实例必须是HTTPS地址，不然Docker会拒绝拉取不安全的私有仓库。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在你的服务器上输入以下指令登录Github Resgistry私有仓库"}]},{"type":"element","tag":"pre","props":{"code":"docker login ghcr.io\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"docker login ghcr.io\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"然后会提示你输入账号和有访问权限的Github Access Token，确认登录后你就可以拉取你的私有仓库镜像了，如果你是使用的1Panel的话，可以在容器的仓库设置直接设置私有仓库。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"然后你也可以使用下面的compose文件进行配置安装Shiroi："}]},{"type":"element","tag":"pre","props":{"code":"services:\n  shiro:\n    container_name: Shiroi\n    image:\n    restart: always\n    environment:\n      - NEXT_SHARP_PATH=/usr/local/lib/node_modules/sharp\n      - NEXT_PUBLIC_API_URL=https://api.example.com/api/v2\n      - NEXT_PUBLIC_GATEWAY_URL=https://api.example.com\n    ports:\n      - 127.0.0.1:2323:2323\n    networks:\n      - 1panel-network\nnetworks:\n  1panel-network:\n    external: true\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"services:\n  shiro:\n    container_name: Shiroi\n    image:\n    restart: always\n    environment:\n      - NEXT_SHARP_PATH=/usr/local/lib/node_modules/sharp\n      - NEXT_PUBLIC_API_URL=https://api.example.com/api/v2\n      - NEXT_PUBLIC_GATEWAY_URL=https://api.example.com\n    ports:\n      - 127.0.0.1:2323:2323\n    networks:\n      - 1panel-network\nnetworks:\n  1panel-network:\n    external: true\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"image"}]},{"type":"text","value":"这里填写你在软件包仓库这里看到的容器镜像信息，当然这是适用于1Panel的，常规部署也可以用下面这个"}]},{"type":"element","tag":"pre","props":{"code":"services:\n  shiro:\n    container_name: Shiroi\n    image:\n    restart: always\n    environment:\n      - NEXT_SHARP_PATH=/usr/local/lib/node_modules/sharp\n      - NEXT_PUBLIC_API_URL=https://api.example.com/api/v2\n      - NEXT_PUBLIC_GATEWAY_URL=https://api.example.com\n    ports:\n      - 127.0.0.1:2323:2323\n    networks:\n      - mx-network\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"services:\n  shiro:\n    container_name: Shiroi\n    image:\n    restart: always\n    environment:\n      - NEXT_SHARP_PATH=/usr/local/lib/node_modules/sharp\n      - NEXT_PUBLIC_API_URL=https://api.example.com/api/v2\n      - NEXT_PUBLIC_GATEWAY_URL=https://api.example.com\n    ports:\n      - 127.0.0.1:2323:2323\n    networks:\n      - mx-network\n"}]}]},{"type":"element","tag":"h2","props":{"id":"后话"},"children":[{"type":"text","value":"后话"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这样你就算是简单完成了，本文本质上偏专业系，而非喂饭文，如果有疑问可以评论区提问或者搭配搜索引擎食用本文。"}]}],"toc":{"title":"","searchDepth":4,"depth":4,"links":[{"id":"前言","depth":2,"text":"前言"},{"id":"思路","depth":2,"text":"思路"},{"id":"选择","depth":2,"text":"选择"},{"id":"使用","depth":2,"text":"使用"},{"id":"后话","depth":2,"text":"后话"}]}},"_type":"markdown","_id":"content:posts:2024:10:shiroi-docker-deployment.md","_source":"content","_file":"posts/2024/10/shiroi-docker-deployment.md","_stem":"posts/2024/10/shiroi-docker-deployment","_extension":"md","_original_dir":"/posts"},{"_path":"/2024/10/write-1panel-app","_dir":"10","_draft":false,"_partial":false,"_locale":"","title":"编写1Panel应用商店第三方程序","description":"1Panel 是我目前在使用的一个服务器管理面板，它的社区版开源且免费，整体面板设计简洁快速，不需要登录，在基本体验上似乎是比隔壁宝塔要强一些。","date":"2024-10-17T11:24:26.000Z","categories":["技术探索"],"tags":["1Panel"],"readingTime":{"text":"20 min read","minutes":19.76,"time":1185600,"words":3952},"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"前言"},"children":[{"type":"text","value":"前言"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"1Panel 是我目前在使用的一个服务器管理面板，它的社区版开源且免费，整体面板设计简洁快速，不需要登录，在基本体验上似乎是比隔壁宝塔要强一些。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"不过他被很多小白和部分用户不喜爱的原因是它的应用是通过 Docker 容器化进行部署的。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"采用 Docker 部署的坏处是应用整体内存占用会略高一些，而且配置容器组网是劝退很多小白的原因，配置不好，应用连不上数据库，网站反代不对等等。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但是 Docker 容器化部署的好处也是不少的，比如没有构建应用这一步，就使得应用在拉取完毕镜像以后即刻就能启动，就跟二进制应用文件差不多的感觉，不需要等上很久，也不需要太多服务器性能用于构建，在部署 Node.js 应用时效果尤为显著。而且配置文件简单，只需要了解 Docker Compose 配置文件格式就能上手，整体体验对于大规模部署是很好的。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"当然 1Panel 也是知道小白们可能玩不明白 Docker 的，所以它还有应用商店，里面都是预先写好的 Docker Compose 文件模板，点击安装就能够一键部署，并且都自动为你做好网络设置，同时你还可以设计自己的应用上传到服务器，也可以一键安装，这样就出现了 1Panel 官方应用商店和第三方应用商店的存储库，只需要拉取仓库到服务器就能畅享海量应用。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"实际上 1Panel 应用的结构很简单，只需要几个文件，就能够设计好你想部署的应用，今天我也来简单讲一下如何设计这个应用。"}]},{"type":"element","tag":"h2","props":{"id":"注意"},"children":[{"type":"text","value":"注意"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"值得注意的事情是，1Panel 应用商店的本质其实就是一个个 Docker Compose 编排文件的图形体现，所以实际上需要你的应用有公共可访问的 Docker 镜像才能正常使用。"}]},{"type":"element","tag":"h2","props":{"id":"格式"},"children":[{"type":"text","value":"格式"}]},{"type":"element","tag":"h3","props":{"id":"初始化模板"},"children":[{"type":"text","value":"初始化模板"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"从"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"1panel 1.3"}]},{"type":"text","value":"及以上版本开始，可以在安装了 1Panel 的服务器使用"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"1panel app init <应用的key> <应用的版本>"}]},{"type":"text","value":"指令来快速初始化应用模板文件（注意不是 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"1pctl"}]},{"type":"text","value":"命令）"}]},{"type":"element","tag":"h3","props":{"id":"文件夹格式"},"children":[{"type":"text","value":"文件夹格式"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"应用的文件夹格式大概是长下面这个样子："}]},{"type":"element","tag":"pre","props":{"code":"├──halo // 承载应用的文件夹，这里以halo为例\n    ├── logo.png // 应用的 logo\n    ├── data.yml // 应用声明文件\n    ├── README.md // 应用的 README 文件\n    ├── 2.2.0 // 应用版本 注意不要以 v 开头\n    │&nbsp;&nbsp; ├── data.yml // 应用的参数配置，下面有详细介绍\n    │&nbsp;&nbsp; ├── data // 挂载出来的目录\n    |   ├── scripts // 脚本目录 存放 init.sh upgrade.sh uninstall.sh\n    │&nbsp;&nbsp; └── docker-compose.yml // docker-compose 文件\n    └── 2.3.2\n        ├── data.yml\n        ├── data\n        └── docker-compose.yml\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"├──halo // 承载应用的文件夹，这里以halo为例\n    ├── logo.png // 应用的 logo\n    ├── data.yml // 应用声明文件\n    ├── README.md // 应用的 README 文件\n    ├── 2.2.0 // 应用版本 注意不要以 v 开头\n    │&nbsp;&nbsp; ├── data.yml // 应用的参数配置，下面有详细介绍\n    │&nbsp;&nbsp; ├── data // 挂载出来的目录\n    |   ├── scripts // 脚本目录 存放 init.sh upgrade.sh uninstall.sh\n    │&nbsp;&nbsp; └── docker-compose.yml // docker-compose 文件\n    └── 2.3.2\n        ├── data.yml\n        ├── data\n        └── docker-compose.yml\n"}]}]},{"type":"element","tag":"h3","props":{"id":"应用-logo"},"children":[{"type":"text","value":"应用 Logo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"用于在应用概览和应用详情页面展示，应用的 Logo 为 png 格式，长宽比最好是"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"180 * 180 px"}]},{"type":"text","value":"，把它放在应用的根目录下，例如"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/halo/logo.png"}]},{"type":"text","value":"，不要使用诸如 webp，jpg，svg 这样的格式。"}]},{"type":"element","tag":"h3","props":{"id":"应用声明文件"},"children":[{"type":"text","value":"应用声明文件"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"声明你的应用的基本信息，让 1Panel 知道你的应用的一些基本信息，比如叫什么名字，干什么用的等等，是位于应用根目录下的"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"data.yml"}]},{"type":"text","value":"文件，格式差不多如下："}]},{"type":"element","tag":"pre","props":{"code":"# 下边这一部分推荐填写，虽然 1Panel 的应用商店官方 Wiki 没有声明它到底有何用\nname: Halo\ntags:\n  - 建站\ntitle: 强大易用的开源建站工具\ntype: 建站\ndescription: 强大易用的开源建站工具\n# 下边这一部分为应用声明信息部分，注意填写正确！\nadditionalProperties:  #固定参数\n    key: halo   #应用的 key，仅限英文，用于在 Linux 创建文件夹\n    name: Halo  #应用名称\n    tags:\n        - WebSite #应用标签，可以有多个，请参照标签列表\n    shortDescZh: 强大易用的开源建站工具 #应用中文描述，不要超过 30 个字\n    shortDescEn: Powerful and easy-to-use open source website builder #应用英文描述\n    type: website  #应用类型，区别于应用分类，只能有一个，请参照下方的类型列表\n    crossVersionUpdate: true  #是否可以跨大版本升级\n    limit: 0  #应用安装数量限制，0 代表无限制\n    website: https://halo.run/  #应用的官网地址\n    github: https://github.com/halo-dev/halo #应用 GitHub 的仓库地址\n    document: https://docs.halo.run/ #应用的文档地址\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# 下边这一部分推荐填写，虽然 1Panel 的应用商店官方 Wiki 没有声明它到底有何用\nname: Halo\ntags:\n  - 建站\ntitle: 强大易用的开源建站工具\ntype: 建站\ndescription: 强大易用的开源建站工具\n# 下边这一部分为应用声明信息部分，注意填写正确！\nadditionalProperties:  #固定参数\n    key: halo   #应用的 key，仅限英文，用于在 Linux 创建文件夹\n    name: Halo  #应用名称\n    tags:\n        - WebSite #应用标签，可以有多个，请参照标签列表\n    shortDescZh: 强大易用的开源建站工具 #应用中文描述，不要超过 30 个字\n    shortDescEn: Powerful and easy-to-use open source website builder #应用英文描述\n    type: website  #应用类型，区别于应用分类，只能有一个，请参照下方的类型列表\n    crossVersionUpdate: true  #是否可以跨大版本升级\n    limit: 0  #应用安装数量限制，0 代表无限制\n    website: https://halo.run/  #应用的官网地址\n    github: https://github.com/halo-dev/halo #应用 GitHub 的仓库地址\n    document: https://docs.halo.run/ #应用的文档地址\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我们对必填应用声明信息部分从上往下进行详细的介绍："}]},{"type":"element","tag":"h3","props":{"id":"key"},"children":[{"type":"text","value":"key"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"诸如 halo 这样的名字，它其实就是你应用文件夹的名字，注意此处一定要与应用文件夹的名字保持一致，不然会导致应用无法正常部署安装。"}]},{"type":"element","tag":"h3","props":{"id":"name"},"children":[{"type":"text","value":"name"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"应用的名称部分，用于 1Panel 商店列表中展示和应用详情上方展示，填写好了能提高应用的辨认度。"}]},{"type":"element","tag":"h3","props":{"id":"tags"},"children":[{"type":"text","value":"tags"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"应用的标签，决定了应用在应用商店所属的分类，可以填写多个。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"标签列表和其对应的分类如下："}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"值"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"所属分类"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"值"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"所属分类"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"值"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"所属分类"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"WebSite"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"建站"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Storage"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"云存储"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Email"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"邮件服务"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Server"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Web 服务器"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"AI"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"AI/大模型"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Game"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"休闲游戏"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Runtime"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"运行环境"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"BI"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"BI"}]},{"type":"element","tag":"td","props":{},"children":[]},{"type":"element","tag":"td","props":{},"children":[]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Database"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"数据库"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Security"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"安全"}]},{"type":"element","tag":"td","props":{},"children":[]},{"type":"element","tag":"td","props":{},"children":[]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Tool"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"实用工具"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"DevTool"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"开发工具"}]},{"type":"element","tag":"td","props":{},"children":[]},{"type":"element","tag":"td","props":{},"children":[]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"DevOps"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"DevOps"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Middleware"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"中间件"}]},{"type":"element","tag":"td","props":{},"children":[]},{"type":"element","tag":"td","props":{},"children":[]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Local"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"本地"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Media"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"多媒体"}]},{"type":"element","tag":"td","props":{},"children":[]},{"type":"element","tag":"td","props":{},"children":[]}]}]}]},{"type":"element","tag":"h3","props":{"id":"shortdesczhen"},"children":[{"type":"text","value":"shortDescZh/En"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"应用的中文/英文描述，用于应用在应用商店列表中和应用详情页上方快速介绍应用，不要太长（中文不超过 30 字）"}]},{"type":"element","tag":"h3","props":{"id":"type"},"children":[{"type":"text","value":"type"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"应用的用途分类，这里主要决定了 1Panel 会怎么对待你的应用，比如"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"website"}]},{"type":"text","value":"类型的可以在其网站功能中一键进行反代和分配域名。"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"值"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"说明"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"website"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"website 即网站应用程序类型，支持在网站中一键部署和反代，WordPress 和 Halo 都是此 type"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"runtime"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"mysql openresty redis 等类型的应用，倾向于应用的关键运行环境"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"tool"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"phpMyAdmin redis-commander jenkins 等类型的应用，倾向于应用的维护工具等"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"crossversionupdate"},"children":[{"type":"text","value":"crossVersionUpdate"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"决定了应用是否可以跨大版本进行升级，一般来说都可以吧。"}]},{"type":"element","tag":"h3","props":{"id":"limit"},"children":[{"type":"text","value":"limit"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"决定了这个应用最多能部署多少个，一般为"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"无限制，但是有些应用它确实不能重复安装，比如 Openresty 这样的反向代理服务。"}]},{"type":"element","tag":"h3","props":{"id":"website"},"children":[{"type":"text","value":"website"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"应用的官网地址，但不是所有应用都有官网地址，如果真没有那就填写应用的 Github 仓库地址吧，本质上就是一个联系地址"}]},{"type":"element","tag":"h3","props":{"id":"github"},"children":[{"type":"text","value":"github"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"应用的 Github 仓库地址，本质上提交到 1Panel 应用商店的应用都是开源应用，所以一般都有这么个开源地址，你本地定制可以按情况来。"}]},{"type":"element","tag":"h3","props":{"id":"document"},"children":[{"type":"text","value":"document"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"应用的使用文档地址，按需填写吧，不是所有应用都有完善的使用文档。"}]},{"type":"element","tag":"h2","props":{"id":"应用参数配置文件"},"children":[{"type":"text","value":"应用参数配置文件"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"它也是"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"data.yml"}]},{"type":"text","value":"，但是它在应用的版本号目录下，注意不要和应用声明文件搞混了。"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"本文件主要用于生成安装时要填写的 form 表单，在应用版本文件夹下面 可以无表单，但是需要有这个 data.yml 文件，并且包含 formFields 字段。\n@1Panel 应用商店仓库官方 Wiki"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以 Halo 的 Form 表单为例："}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Halo 安装表单示例图（来自 1Panel 官方应用商店仓库）","src":"https://user-images.githubusercontent.com/31820853/226111412-9c7b25a1-83f2-4621-8789-7ef85a2695dd.png"},"children":[]},{"type":"text","value":"\n如果要生成一个上面这样子的表单，你需要这么填写应用参数配置文件（来自官方 Wiki 示例）："}]},{"type":"element","tag":"pre","props":{"code":"additionalProperties:  #固定参数\n    formFields:\n        - default: \"\"\n          envKey: PANEL_DB_HOST  #docker-compose 文件中的参数\n          key: mysql  #依赖应用的 key , 例如 mysql\n          labelEn: Database Service  #英文的 label\n          labelZh: 数据库服务  #中文的 label\n          required: true  #是否必填\n          type: service  #如果需要依赖其他应用，例如数据库，使用此 type\n        - default: halo\n          envKey: PANEL_DB_NAME\n          labelEn: Database\n          labelZh: 数据库名\n          random: true  #是否在 default 文字后面，增加随机字符串\n          required: true\n          rule: paramCommon  #校验规则\n          type: text  #需要手动填写的，使用此 type\n        - default: halo\n          envKey: PANEL_DB_USER\n          labelEn: User\n          labelZh: 数据库用户\n          random: true\n          required: true\n          rule: paramCommon\n          type: text\n        - default: halo\n          envKey: PANEL_DB_USER_PASSWORD\n          labelEn: Password\n          labelZh: 数据库用户密码\n          random: true\n          required: true\n          rule: paramComplexity\n          type: password  #密码字段使用此 type\n        - default: admin\n          envKey: HALO_ADMIN\n          labelEn: Admin Username\n          labelZh: 超级管理员用户名\n          required: true\n          rule: paramCommon\n          type: text\n        - default: halo\n          envKey: HALO_ADMIN_PASSWORD\n          labelEn: Admin Password\n          labelZh: 超级管理员密码\n          random: true\n          required: true\n          rule: paramComplexity\n          type: password\n        - default: http://localhost:8080\n          edit: true\n          envKey: HALO_EXTERNAL_URL\n          labelEn: External URL\n          labelZh: 外部访问地址\n          required: true\n          rule: paramExtUrl\n          type: text\n        - default: 8080\n          edit: true\n          envKey: PANEL_APP_PORT_HTTP\n          labelEn: Port\n          labelZh: 端口\n          required: true\n          rule: paramPort\n          type: number #端口使用此 type\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"additionalProperties:  #固定参数\n    formFields:\n        - default: \"\"\n          envKey: PANEL_DB_HOST  #docker-compose 文件中的参数\n          key: mysql  #依赖应用的 key , 例如 mysql\n          labelEn: Database Service  #英文的 label\n          labelZh: 数据库服务  #中文的 label\n          required: true  #是否必填\n          type: service  #如果需要依赖其他应用，例如数据库，使用此 type\n        - default: halo\n          envKey: PANEL_DB_NAME\n          labelEn: Database\n          labelZh: 数据库名\n          random: true  #是否在 default 文字后面，增加随机字符串\n          required: true\n          rule: paramCommon  #校验规则\n          type: text  #需要手动填写的，使用此 type\n        - default: halo\n          envKey: PANEL_DB_USER\n          labelEn: User\n          labelZh: 数据库用户\n          random: true\n          required: true\n          rule: paramCommon\n          type: text\n        - default: halo\n          envKey: PANEL_DB_USER_PASSWORD\n          labelEn: Password\n          labelZh: 数据库用户密码\n          random: true\n          required: true\n          rule: paramComplexity\n          type: password  #密码字段使用此 type\n        - default: admin\n          envKey: HALO_ADMIN\n          labelEn: Admin Username\n          labelZh: 超级管理员用户名\n          required: true\n          rule: paramCommon\n          type: text\n        - default: halo\n          envKey: HALO_ADMIN_PASSWORD\n          labelEn: Admin Password\n          labelZh: 超级管理员密码\n          random: true\n          required: true\n          rule: paramComplexity\n          type: password\n        - default: http://localhost:8080\n          edit: true\n          envKey: HALO_EXTERNAL_URL\n          labelEn: External URL\n          labelZh: 外部访问地址\n          required: true\n          rule: paramExtUrl\n          type: text\n        - default: 8080\n          edit: true\n          envKey: PANEL_APP_PORT_HTTP\n          labelEn: Port\n          labelZh: 端口\n          required: true\n          rule: paramPort\n          type: number #端口使用此 type\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"是不是看的眼晕了，我们这里拆出来解释下它这个东西："}]},{"type":"element","tag":"pre","props":{"code":"        - default: \"\"\n          envKey: PANEL_DB_HOST  #docker-compose 文件中的参数\n          key: mysql  #依赖应用的 key , 例如 mysql\n          labelEn: Database Service  #英文的 label\n          labelZh: 数据库服务  #中文的 label\n          required: true  #是否必填\n          type: service  #如果需要依赖其他应用，例如数据库，使用此 type\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"        - default: \"\"\n          envKey: PANEL_DB_HOST  #docker-compose 文件中的参数\n          key: mysql  #依赖应用的 key , 例如 mysql\n          labelEn: Database Service  #英文的 label\n          labelZh: 数据库服务  #中文的 label\n          required: true  #是否必填\n          type: service  #如果需要依赖其他应用，例如数据库，使用此 type\n"}]}]},{"type":"element","tag":"h3","props":{"id":"dafault"},"children":[{"type":"text","value":"dafault"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"应用这个变量值的默认格式，填写上什么应用的设置变量默认就会填写什么东西，比如说你要设置这个应用的默认前端站点是"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"example.com"}]},{"type":"text","value":"就在这里这样填写上它，应用就会默认把"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"example.com"}]},{"type":"text","value":"做前端默认站点值。"}]},{"type":"element","tag":"h3","props":{"id":"envkey"},"children":[{"type":"text","value":"envKey"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"对应了你的应用的 compose 编排文件中环境变量设置部分，比如"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"environment"}]},{"type":"text","value":"下的值，但其实简单点说就是会传递一个变量值给文件，比如"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"HOST"}]},{"type":"text","value":"变量可以在 compose 文件中通过"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"${HOST}"}]},{"type":"text","value":"来引用它，不难理解吧。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"譬如在如下 Halo 例子中的引用："}]},{"type":"element","tag":"pre","props":{"code":"services:\n  halo:\n    image: halohub/halo:2.2.0\n    container_name: ${CONTAINER_NAME}\n    restart: always\n    networks:\n      - 1panel-network\n    volumes:\n      - ./data:/root/.halo2\n    ports:\n      - ${PANEL_APP_PORT_HTTP}:8090\n    command:\n      - --spring.r2dbc.url=r2dbc:pool:${HALO_PLATFORM}://${PANEL_DB_HOST}:${HALO_DB_PORT}/${PANEL_DB_NAME}\n      - --spring.r2dbc.username=${PANEL_DB_USER}\n      - --spring.r2dbc.password=${PANEL_DB_USER_PASSWORD}\n      - --spring.sql.init.platform=${HALO_PLATFORM}\n      - --halo.external-url=${HALO_EXTERNAL_URL}\n      - --halo.security.initializer.superadminusername=${HALO_ADMIN}\n      - --halo.security.initializer.superadminpassword=${HALO_ADMIN_PASSWORD}\n    labels:\n      createdBy: \"Apps\"\n\nnetworks:\n  1panel-network:\n    external: true\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"services:\n  halo:\n    image: halohub/halo:2.2.0\n    container_name: ${CONTAINER_NAME}\n    restart: always\n    networks:\n      - 1panel-network\n    volumes:\n      - ./data:/root/.halo2\n    ports:\n      - ${PANEL_APP_PORT_HTTP}:8090\n    command:\n      - --spring.r2dbc.url=r2dbc:pool:${HALO_PLATFORM}://${PANEL_DB_HOST}:${HALO_DB_PORT}/${PANEL_DB_NAME}\n      - --spring.r2dbc.username=${PANEL_DB_USER}\n      - --spring.r2dbc.password=${PANEL_DB_USER_PASSWORD}\n      - --spring.sql.init.platform=${HALO_PLATFORM}\n      - --halo.external-url=${HALO_EXTERNAL_URL}\n      - --halo.security.initializer.superadminusername=${HALO_ADMIN}\n      - --halo.security.initializer.superadminpassword=${HALO_ADMIN_PASSWORD}\n    labels:\n      createdBy: \"Apps\"\n\nnetworks:\n  1panel-network:\n    external: true\n"}]}]},{"type":"element","tag":"h3","props":{"id":"key-1"},"children":[{"type":"text","value":"key"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这个虽然出现在了 1Panel 的官方 Wiki 示例中，但是似乎实际他们已经弃用这样写了，部分应用会依赖其他服务，比如 Halo 会有依赖 MySQL 数据库，这个时候你就在这里填写上它就能去引用它，1Panel 给的这个例子有点旧，我们使用下面的格式来实现引用外部数据库："}]},{"type":"element","tag":"pre","props":{"code":"        - child:\n            default: \"\"\n            envKey: PANEL_DB_HOST\n            required: true\n            type: service\n          default: mysql\n          envKey: PANEL_DB_TYPE\n          labelEn: Database Service\n          labelZh: 数据库服务\n          required: true\n          type: apps\n          values:\n            - label: MySQL\n              value: mysql\n            - label: MariaDB\n              value: mariadb\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"        - child:\n            default: \"\"\n            envKey: PANEL_DB_HOST\n            required: true\n            type: service\n          default: mysql\n          envKey: PANEL_DB_TYPE\n          labelEn: Database Service\n          labelZh: 数据库服务\n          required: true\n          type: apps\n          values:\n            - label: MySQL\n              value: mysql\n            - label: MariaDB\n              value: mariadb\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这样你就可以为你的应用接入选择数据库的方式了，但是我也不是很懂这个，实际写起来直接 Ctrl+C 其他已实现接入外部数据库的应用范例似乎是个好办法。"}]},{"type":"element","tag":"h3","props":{"id":"labelenzh"},"children":[{"type":"text","value":"labelEn/Zh"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这个我感觉并不需要过多的介绍，已经在上面写的比较明白了，应用这个项的中英文描述。"}]},{"type":"element","tag":"h3","props":{"id":"required"},"children":[{"type":"text","value":"required"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"决定这个变量值是否是必填的，在它为"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"的情况下不填写它是不能继续安装的，你可以视情况决定这个东西。"}]},{"type":"element","tag":"h3","props":{"id":"type-1"},"children":[{"type":"text","value":"type"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"看着似乎表格很明白但实际写起来还是挺头疼的东西，自己按表格查询吧，我自己也对这个东西非常头疼，差不多它的设定决定了你的应用这个设置变量只能填什么东西。"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"值"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"说明"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"service"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"type: service"}]},{"type":"text","value":" 如果该应用需要依赖其他组件，如 mysql redis 等，可以通过 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"key: mysql"}]},{"type":"text","value":" 定义依赖的名称，在创建应用时会要求先创建依赖的应用。"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"password"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"type: password"}]},{"type":"text","value":" 敏感信息，如密码相关的字段会默认不显示明文。"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"text"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"type: text"}]},{"type":"text","value":" 一般内容，比如数据库名称，默认明文显示。"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"number"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"type: number"}]},{"type":"text","value":" 一般用在端口相关的配置上，只允许输入数字。"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"select"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"type: select"}]},{"type":"text","value":" 选项，比如 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"true"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"false"}]},{"type":"text","value":"，日志等级等。"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"通过官方给的下方的例子对照查询了解："}]},{"type":"element","tag":"td","props":{},"children":[]}]}]}]},{"type":"element","tag":"pre","props":{"code":"# type: service，定义一个 mysql 的 service 依赖。\n- default: \"\"\n    envKey: DB_HOST\n    key: mysql\n    labelEn: Database Service\n    labelZh: 数据库服务\n    required: true\n    type: service\n\n# type: password\n- default: Np2qgqtiUayA857GpuVI0Wtg\n    edit: true\n    envKey: DB_PASSWORD\n    labelEn: Database password\n    labelZh: 数据库密码\n    required: true\n    type: password\n\n# type: text\n- default: 192.168.100.100\n    disabled: true.\n    envKey: REDIS_HOST\n    labelEn: Redis host\n    labelZh: Redis 主机\n    type: text\n\n# type: number\n- default: 3306\n    disabled: true\n    envKey: DB_PORT\n    labelEn: Database port\n    labelZh: 数据库端口\n    rule: paramPort\n    type: number\n\n# type: select\n- default: \"ERROR\"\n    envKey: LOG_LEVEL\n    labelEn: Log level\n    labelZh: 日志级别\n    required: true\n    type: select\n    values:\n        - label: DEBUG\n          value: \"DEBUG\"\n        - label: INFO\n          value: \"INFO\"\n        - label: WARNING\n          value: \"WARNING\"\n        - label: ERROR\n          value: \"ERROR\"\n        - label: CRITICAL\n          value: \"CRITICAL\"\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# type: service，定义一个 mysql 的 service 依赖。\n- default: \"\"\n    envKey: DB_HOST\n    key: mysql\n    labelEn: Database Service\n    labelZh: 数据库服务\n    required: true\n    type: service\n\n# type: password\n- default: Np2qgqtiUayA857GpuVI0Wtg\n    edit: true\n    envKey: DB_PASSWORD\n    labelEn: Database password\n    labelZh: 数据库密码\n    required: true\n    type: password\n\n# type: text\n- default: 192.168.100.100\n    disabled: true.\n    envKey: REDIS_HOST\n    labelEn: Redis host\n    labelZh: Redis 主机\n    type: text\n\n# type: number\n- default: 3306\n    disabled: true\n    envKey: DB_PORT\n    labelEn: Database port\n    labelZh: 数据库端口\n    rule: paramPort\n    type: number\n\n# type: select\n- default: \"ERROR\"\n    envKey: LOG_LEVEL\n    labelEn: Log level\n    labelZh: 日志级别\n    required: true\n    type: select\n    values:\n        - label: DEBUG\n          value: \"DEBUG\"\n        - label: INFO\n          value: \"INFO\"\n        - label: WARNING\n          value: \"WARNING\"\n        - label: ERROR\n          value: \"ERROR\"\n        - label: CRITICAL\n          value: \"CRITICAL\"\n"}]}]},{"type":"element","tag":"h3","props":{"id":"rule"},"children":[{"type":"text","value":"rule"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在上面的例子中部分登场，主要是校验用户是否书写这个东西的格式是正确的，比如防止某些用户在端口设置这里填写域名的东西，这个"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"rule"}]},{"type":"text","value":"就会强制这个填写栏必须填写什么格式。"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"值"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"规则"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"paramPort"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"用于限制端口范围为 1-65535"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"paramExtUrl"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"格式为 http(s)://(域名/ip):(端口)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"paramCommon"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"英文、数字、.-和_，长度 2-30"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"paramComplexity"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"支持英文、数字、.%@$!&~_-,长度 6-30，特殊字符不能在首尾"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"应用-compose-文件"},"children":[{"type":"text","value":"应用 Compose 文件"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"位于应用版本号目录下的"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"docker-compose.yml"}]},{"type":"text","value":"文件，注意有格式要求，下面是示例"}]},{"type":"element","tag":"h3","props":{"id":"示例文件"},"children":[{"type":"text","value":"示例文件"}]},{"type":"element","tag":"pre","props":{"code":"services:\n  ghost:\n    container_name: ${CONTAINER_NAME}\n    restart: always\n    networks:\n      - 1panel-network\n    ports:\n      - \"${PANEL_APP_PORT_HTTP}:2368\"\n    volumes:\n      - ./data:/var/lib/ghost/content\n    environment:\n      - database__client=${PANEL_DB_TYPE}\n      - database__connection__host=${PANEL_DB_HOST}\n      - database__connection__user=${PANEL_DB_USER}\n      - database__connection__password=${PANEL_DB_USER_PASSWORD}\n      - database__connection__database=${PANEL_DB_NAME}\n      - database__connection__port=${PANEL_DB_PORT}\n      - url=${GHOST_EXTERNAL_URL}\n    image: ghost:5.96.2\n    labels:\n      createdBy: \"Apps\"\n\nnetworks:\n  1panel-network:\n    external: true\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"services:\n  ghost:\n    container_name: ${CONTAINER_NAME}\n    restart: always\n    networks:\n      - 1panel-network\n    ports:\n      - \"${PANEL_APP_PORT_HTTP}:2368\"\n    volumes:\n      - ./data:/var/lib/ghost/content\n    environment:\n      - database__client=${PANEL_DB_TYPE}\n      - database__connection__host=${PANEL_DB_HOST}\n      - database__connection__user=${PANEL_DB_USER}\n      - database__connection__password=${PANEL_DB_USER_PASSWORD}\n      - database__connection__database=${PANEL_DB_NAME}\n      - database__connection__port=${PANEL_DB_PORT}\n      - url=${GHOST_EXTERNAL_URL}\n    image: ghost:5.96.2\n    labels:\n      createdBy: \"Apps\"\n\nnetworks:\n  1panel-network:\n    external: true\n"}]}]},{"type":"element","tag":"h3","props":{"id":"要求"},"children":[{"type":"text","value":"要求"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"头部没有"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"version"}]},{"type":"text","value":"的变量，记得把它删去。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"必须为应用定义"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"container_name"}]},{"type":"text","value":"这个设置，且后面必须是"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"${CONTAINER_NAME}"}]},{"type":"text","value":"，这样 1Panel 才能在安装时对其正确配置。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"必须配置应用网络为"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"1panel-network"}]},{"type":"text","value":"，这样应用之间才能正常互联，我在部分第三方应用商店库发现它们不是很注重这个，当然这事也可以视情况而论，但是建议是都在 1Panel 官方网络下。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"端口"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ports"}]},{"type":"text","value":"这里设置也是必须为其默认定义的"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"${PANEL_APP_PORT_HTTP}:8090"}]},{"type":"text","value":"这样的格式，这样 1Panel 才能正确设置应用的开放端口"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"文件尾部也必须跟示例文件一样，填写了"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"networks"}]},{"type":"text","value":"配置，直接"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Ctrl+C"}]},{"type":"text","value":"过去就好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"应用的"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"image"}]},{"type":"text","value":"镜像标签必须和文件夹表示的版本号一致，比如这个版本号文件夹写的是"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"5.96.2"}]},{"type":"text","value":"，那么其文件内部"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"image"}]},{"type":"text","value":"标签也必须那样写，不然会影响应用检测和安装更新！"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"记得填写上面的"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"labels"}]},{"type":"text","value":"标签，直接"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Ctrl+C"}]},{"type":"text","value":"过去就行，当然这个也不算必填项，只是一种规范罢了。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"记得为应用定义重启相关，比如"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"always"}]},{"type":"text","value":"等等，这样保证应用在遇到问题后可以恢复（雾）"}]}]},{"type":"element","tag":"h2","props":{"id":"脚本"},"children":[{"type":"text","value":"脚本"}]},{"type":"element","tag":"h3","props":{"id":"介绍"},"children":[{"type":"text","value":"介绍"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"1Panel 在 安装之前、升级之前、卸载之后支持执行 .sh 脚本\n分别对应 init.sh upgrade.sh uninstall.sh\n存放目录 (以 halo 为例) : halo/2.2.0/scripts"}]},{"type":"element","tag":"h2","props":{"id":"本地测试"},"children":[{"type":"text","value":"本地测试"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我十分建议你发布前先在自己已安装 1Panel 的服务器上进行测试，确定它是否可以正常安装"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"将应用目录上传到 1Panel 的"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/opt/1panel/resource/apps/local"}]},{"type":"text","value":"文件夹下\n注意："},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/opt"}]},{"type":"text","value":" 为 1Panel 默认安装目录，请根据自己的实际情况修改\n上传完成后，目录结构如下："}]},{"type":"element","tag":"pre","props":{"code":"├──halo\n    ├── logo.png\n    ├── data.yml\n    ├── README.md\n    ├── 2.2.0\n     &nbsp;&nbsp; ├── data.yml\n     &nbsp;&nbsp; ├── data\n     &nbsp;&nbsp; └── docker-compose.yml\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"├──halo\n    ├── logo.png\n    ├── data.yml\n    ├── README.md\n    ├── 2.2.0\n     &nbsp;&nbsp; ├── data.yml\n     &nbsp;&nbsp; ├── data\n     &nbsp;&nbsp; └── docker-compose.yml\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 1Panel 应用商店中，点击更新应用列表按钮同步本地应用。"}]},{"type":"element","tag":"h2","props":{"id":"收尾"},"children":[{"type":"text","value":"收尾"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"测试正常后，你就可以去提交官方库或者第三方应用商店库了，或者你自己用，都可以，不过我还是建议你本着分享精神，把它提交到官方或其他第三方应用商店仓库里去。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"官方的要求和拒绝率比较高，一般来说提交第三方仓库也挺好的，这里列举目前个人已知仓库："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/AuroraStarTeam/1panel-app-store","rel":["nofollow"]},"children":[{"type":"text","value":"AuroraStarTeam/1panel-app-store"}]},{"type":"text","value":"，由我所属个人组织极光星进行维护，理念是干净整洁，但是个人经验可能不够丰富。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/okxlin/appstore","rel":["nofollow"]},"children":[{"type":"text","value":"okxlin/appstore"}]},{"type":"text","value":"，流行和最早的第三方商店库，应用很多，但是也很乱。"}]}]},{"type":"element","tag":"h2","props":{"id":"参考文档"},"children":[{"type":"text","value":"参考文档："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/1Panel-dev/appstore/wiki/%E5%A6%82%E4%BD%95%E6%8F%90%E4%BA%A4%E8%87%AA%E5%B7%B1%E6%83%B3%E8%A6%81%E7%9A%84%E5%BA%94%E7%94%A8","rel":["nofollow"]},"children":[{"type":"text","value":"如何提交自己想要的应用（1Panel 官方应用商店仓库 Wiki）"}]}]}]}],"toc":{"title":"","searchDepth":4,"depth":4,"links":[{"id":"前言","depth":2,"text":"前言"},{"id":"注意","depth":2,"text":"注意"},{"id":"格式","depth":2,"text":"格式","children":[{"id":"初始化模板","depth":3,"text":"初始化模板"},{"id":"文件夹格式","depth":3,"text":"文件夹格式"},{"id":"应用-logo","depth":3,"text":"应用 Logo"},{"id":"应用声明文件","depth":3,"text":"应用声明文件"},{"id":"key","depth":3,"text":"key"},{"id":"name","depth":3,"text":"name"},{"id":"tags","depth":3,"text":"tags"},{"id":"shortdesczhen","depth":3,"text":"shortDescZh/En"},{"id":"type","depth":3,"text":"type"},{"id":"crossversionupdate","depth":3,"text":"crossVersionUpdate"},{"id":"limit","depth":3,"text":"limit"},{"id":"website","depth":3,"text":"website"},{"id":"github","depth":3,"text":"github"},{"id":"document","depth":3,"text":"document"}]},{"id":"应用参数配置文件","depth":2,"text":"应用参数配置文件","children":[{"id":"dafault","depth":3,"text":"dafault"},{"id":"envkey","depth":3,"text":"envKey"},{"id":"key-1","depth":3,"text":"key"},{"id":"labelenzh","depth":3,"text":"labelEn/Zh"},{"id":"required","depth":3,"text":"required"},{"id":"type-1","depth":3,"text":"type"},{"id":"rule","depth":3,"text":"rule"}]},{"id":"应用-compose-文件","depth":2,"text":"应用 Compose 文件","children":[{"id":"示例文件","depth":3,"text":"示例文件"},{"id":"要求","depth":3,"text":"要求"}]},{"id":"脚本","depth":2,"text":"脚本","children":[{"id":"介绍","depth":3,"text":"介绍"}]},{"id":"本地测试","depth":2,"text":"本地测试"},{"id":"收尾","depth":2,"text":"收尾"},{"id":"参考文档","depth":2,"text":"参考文档："}]}},"_type":"markdown","_id":"content:posts:2024:10:write-1panel-app.md","_source":"content","_file":"posts/2024/10/write-1panel-app.md","_stem":"posts/2024/10/write-1panel-app","_extension":"md","_original_dir":"/posts"},{"_path":"/2024/12/break-change-2024","_dir":"12","_draft":false,"_partial":false,"_locale":"","title":"破坏型迁移：站点反复横跳与稳定工作","description":null,"date":"2024-12-07T10:24:26.000Z","categories":["日志记录"],"tags":["迁移"],"readingTime":{"text":"2 min read","minutes":1.545,"time":92700,"words":309},"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hi~我是Mikuの鬆（PaloMiku），好久不见。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我在自己博客上又做了破坏性迁移，出于多方面考虑，博客域名将迁移到blog子域名上，评论数据等将不会被保留，部分文章被删除（有部分2023年以及之前的文章仍在修订迁移）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"说来惭愧，因为个人能力问题，所以在站点撰写文章上是可以明显看出水分和个人能力不足。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我的很多时间可能还是花在了调整站点架构，域名迁移，服务器调整上。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在本次破坏性迁移后，站点可以保证在2026年9月前在不遇到任何意外情况的前提下，将不再进行域名与服务器迁移工作，可以基本保证站点稳定性。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"**为什么？**因为本站基本服务结构（服务器和域名）已经可以确定在2026年9月前不会到期，所以就算我人没了，它也会工作到2026年9月18日结束。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"华为云华东上海服务器（2026年12月到期）","src":"https://file.101045700.xyz/2024/12/06458ae7237f9879b28bd19ba42984c8.webp"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"本站域名Whois信息","src":"https://file.101045700.xyz/2024/12/7529e5bea4285b3d5a3fc3bf0f90fb49.webp"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"同时服务器系统已更换为"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Huawei Cloud EulerOS"}]},{"type":"text","value":"以保证服务器持续工作稳定性，本站后续更新依旧会保持缓慢进展。"}]}],"toc":{"title":"","searchDepth":4,"depth":4,"links":[]}},"_type":"markdown","_id":"content:posts:2024:12:break-change-2024.md","_source":"content","_file":"posts/2024/12/break-change-2024.md","_stem":"posts/2024/12/break-change-2024","_extension":"md","_original_dir":"/posts"},{"_path":"/2024/12/oyiso-tianligpt","_dir":"12","_draft":false,"_partial":false,"_locale":"","title":"为Oyiso主题引入TianliGPT摘要","description":null,"date":"2024-12-07T10:24:26.000Z","categories":["技术探索"],"tags":["Oyiso","WordPress"],"readingTime":{"text":"3 min read","minutes":2.295,"time":137700,"words":459},"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"前言"},"children":[{"type":"text","value":"前言"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在之前我在使用Hexo主题的时候，当时有些Hexo主题带了TianliGPT摘要功能，当时觉得有点意思并且还买了5万字额度，结果到换系统都没用完（无奈）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"最近这不是又换回WordPress Oyiso主题了嘛，看了下已经有WordPress主题引入TianliGPT的案例了，对照教程和相关代码照葫芦画瓢把摘要功能又给添上了，也算是解决我那剩下的几万字额度。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"不过现在它已经支持到PostChat了，升级版的对话浮窗，更多功能，无限额度，不过18元/月劝退我了，什么时候我文章够多了再引入这个也不急（穷）"}]},{"type":"element","tag":"h2","props":{"id":"什么是tianligpt"},"children":[{"type":"text","value":"什么是TianliGPT"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"TianliGPT是一个基于GPT-3.5的文字摘要生成工具，你可以将需要提取摘要的文本内容发送给TianliGPT，稍等一会他就可以给你发送一个基于这段文本内容的摘要。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"实时生成的摘要"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自动生成，无需人工干预"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"一次生成，再次生成无需消耗key"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"包含文字审核过滤，适用于中国大陆"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"支持中国大陆访问"}]}]},{"type":"element","tag":"h2","props":{"id":"引入"},"children":[{"type":"text","value":"引入"}]},{"type":"element","tag":"h3","props":{"id":"安装插件与设置"},"children":[{"type":"text","value":"安装插件与设置"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"首先前往WordPress PostChat插件的"},{"type":"element","tag":"a","props":{"href":"https://github.com/zhheo/wordpress-plugin-postchat","rel":["nofollow"]},"children":[{"type":"text","value":"Github仓库"}]},{"type":"text","value":"下载插件并在后台上传安装。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"https://file.101045700.xyz/2024/12/84bce8cfe0ab8276ba0f78f1b3db4e86.webp"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"打开插件设置，在上面填入你的Key，获取Key和购买额度参考上面引导，如果只需要文章摘要可以关闭智能对话功能。"}]},{"type":"element","tag":"h3","props":{"id":"前端引入代码"},"children":[{"type":"text","value":"前端引入代码"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"https://file.101045700.xyz/2024/12/6a03b5d58939f9f070c358bc812c7070.webp"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"打开Oyiso主题的自定义代码设置，把下方代码填入自定义HTML代码（头部）或者（底部）都可以，替换里面的tianliGPT_key项为你的Key。"}]},{"type":"element","tag":"pre","props":{"code":"<link rel=\"stylesheet\" href=\"https://ai.tianli0.top/static/public/tianli_gpt.min.css\"><script>\nlet tianliGPT_postSelector = '#postchat_postcontent';\nlet tianliGPT_key = '1145141919810'; //填入你的Key\n</script>\n<script src=\"https://ai.tianli0.top/static/public/tianli_gpt.min.js\"></script>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<link rel=\"stylesheet\" href=\"https://ai.tianli0.top/static/public/tianli_gpt.min.css\"><script>\nlet tianliGPT_postSelector = '#postchat_postcontent';\nlet tianliGPT_key = '1145141919810'; //填入你的Key\n</script>\n<script src=\"https://ai.tianli0.top/static/public/tianli_gpt.min.js\"></script>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"保存设置，然后Enjoy it."}]}],"toc":{"title":"","searchDepth":4,"depth":4,"links":[{"id":"前言","depth":2,"text":"前言"},{"id":"什么是tianligpt","depth":2,"text":"什么是TianliGPT"},{"id":"引入","depth":2,"text":"引入","children":[{"id":"安装插件与设置","depth":3,"text":"安装插件与设置"},{"id":"前端引入代码","depth":3,"text":"前端引入代码"}]}]}},"_type":"markdown","_id":"content:posts:2024:12:oyiso-tianligpt.md","_source":"content","_file":"posts/2024/12/oyiso-tianligpt.md","_stem":"posts/2024/12/oyiso-tianligpt","_extension":"md","_original_dir":"/posts"},{"_path":"/2025/01/arch-aur-kazumi","_dir":"01","_draft":false,"_partial":false,"_locale":"","title":"为了一碟醋包了一盘饺子：构建和提交Kazumi AUR包","description":"最近追番的时候看到了一个名为Kazumi的程序，它是一个基于Flutter开发的，可自定义规则的番剧采集程序，支持流媒体在线观看，同时还支持弹幕和实时超分辨率。","date":"2025-01-24T10:24:26.000Z","categories":["技术探索"],"tags":["Arch","AUR"],"image":"https://file.101045700.xyz/2025/01/76ab1468eba28613d3177cea8f63994d.webp","readingTime":{"text":"5 min read","minutes":4.125,"time":247500,"words":825},"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"最近追番的时候看到了一个名为Kazumi的程序，它是一个基于Flutter开发的，可自定义规则的番剧采集程序，支持流媒体在线观看，同时还支持弹幕和实时超分辨率。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Github仓库："},{"type":"element","tag":"a","props":{"href":"https://github.com/Predidit/Kazumi","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/Predidit/Kazumi"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"那听上去还是很有意思的，我属于看番剧喜欢顺带看点弹幕的那种，就像我明明知道不全，知道会删减，但依然还续着B站大会员也多少跟这有些关系。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"总之我还是比较喜欢Kazumi的，它支持的平台也是不少的，iOS，安卓，Win，Linux，甚至新的鸿蒙Next都有支持。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"不过我是一个ArchLinux+KDE用户，在使用它时就遇到了一些问题。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"首先Kazumi官方提供的Linux安装方式是Deb（Debian）和tar.gz包，或者你也可以通过Flathub安装它。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但是很显然，Arch它不能用Deb安装，而我也不能用Flathub。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Kazumi Flathub的安装方式对我这个KDE桌面用户来说并不友好，居然还需要安装一整套GNOME组件？这不开玩笑嘛，我为了装个程序还得去装隔壁GNOME桌面，这肯定不行。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"咱们有请万能的AUR来给我们看看，首先我们看到了也是有前人种树的：kazumi-bin，但是很可惜的是截止本文发布时，此包维护者已经很久没有更新过它了。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"https://file.101045700.xyz/2025/01/de4c7618811b03e971e5092c703f530f.webp"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"还是古早版本，好在Arch安装包是使用PKGBUILD管理的，过程不算复杂，我能很轻松复现它这个过程，更新为最新版本并且安装。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"（为此我还去查了Arch Wiki看了半天软件包构建与AUR包提交资料）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我是解决了，但是其他用户呢？也许会有别的Arch用户也想装Kazumi，然后遇到我这个难受的情况。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所以作为老好人（bushi）的我决定提交下AUR包📦来帮助后人。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"你现在想要在Arch使用我构建的这个包很简单，有yay的情况下直接输入下面命令然后Enter就行了。"}]},{"type":"element","tag":"pre","props":{"code":"yay -S kazumi\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yay -S kazumi\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我为了琢磨这个包看了半天时间资料，毕竟我对Linux基础也不算特别好，这更是我第一次提交AUR包，配置公私密钥和构建花费了我俩小时的时间。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://aur.archlinux.org/packages/kazumi","rel":["nofollow"]},"children":[{"type":"text","value":"我构建的AUR包"}]},{"type":"text","value":"是以Kazumi的tar.gz为基底做的，它的PKGBUILD文件如下"}]},{"type":"element","tag":"pre","props":{"code":"# Maintainer: PaloMiku <palomiku@outlook.com>\npkgname=kazumi\npkgver=1.5.3\npkgrel=2\npkgdesc=\"基于自定义规则的番剧采集APP，支持流媒体在线观看，支持弹幕。\"\narch=('x86_64')\nurl='https://github.com/Predidit/Kazumi'\nlicense=('GPL3')\nsource_x86_64=(\"${pkgname}-${pkgver}.tar.gz::https://github.com/Predidit/Kazumi/releases/download/$pkgver/Kazumi_linux_${pkgver}_amd64.tar.gz\" \"icon.png\")\nsha256sums_x86_64=('2e06f4fa252a93324b74098ab336874780b62e5058d6a85e6ed97a54e3f0986c' 'SKIP')\ndepends=('libayatana-appindicator' 'xdg-user-dirs' 'webkit2gtk-4.1')\n\npackage() {\n    install -d \"${pkgdir}/opt/Kazumi\" \"${pkgdir}/usr/bin\"\n\n    bsdtar -xf \"$srcdir/${pkgname}-${pkgver}.tar.gz\" -C \"${pkgdir}/opt/Kazumi\"\n\n    ln -s /opt/Kazumi/kazumi \"${pkgdir}/usr/bin/kazumi\"\n\n    install -Dm644 /dev/stdin \"${pkgdir}/usr/share/applications/kazumi.desktop\" <<EOF\n#!/usr/bin/env xdg-open\n[Desktop Entry]\nName=Kazumi\nComment=Watch Animes online with danmaku support.\nComment[zh_CN]=一款好用的追番软件\nExec=kazumi\nIcon=io.github.Predidit.Kazumi\nTerminal=false\nType=Application\nCategories=AudioVideo;Audio;Video;\nEOF\n\n    # 安装图标\n    install -Dm644 \"${srcdir}/icon.png\" \"${pkgdir}/usr/share/icons/hicolor/128x128/apps/io.github.Predidit.Kazumi.png\"\n}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# Maintainer: PaloMiku <palomiku@outlook.com>\npkgname=kazumi\npkgver=1.5.3\npkgrel=2\npkgdesc=\"基于自定义规则的番剧采集APP，支持流媒体在线观看，支持弹幕。\"\narch=('x86_64')\nurl='https://github.com/Predidit/Kazumi'\nlicense=('GPL3')\nsource_x86_64=(\"${pkgname}-${pkgver}.tar.gz::https://github.com/Predidit/Kazumi/releases/download/$pkgver/Kazumi_linux_${pkgver}_amd64.tar.gz\" \"icon.png\")\nsha256sums_x86_64=('2e06f4fa252a93324b74098ab336874780b62e5058d6a85e6ed97a54e3f0986c' 'SKIP')\ndepends=('libayatana-appindicator' 'xdg-user-dirs' 'webkit2gtk-4.1')\n\npackage() {\n    install -d \"${pkgdir}/opt/Kazumi\" \"${pkgdir}/usr/bin\"\n\n    bsdtar -xf \"$srcdir/${pkgname}-${pkgver}.tar.gz\" -C \"${pkgdir}/opt/Kazumi\"\n\n    ln -s /opt/Kazumi/kazumi \"${pkgdir}/usr/bin/kazumi\"\n\n    install -Dm644 /dev/stdin \"${pkgdir}/usr/share/applications/kazumi.desktop\" <<EOF\n#!/usr/bin/env xdg-open\n[Desktop Entry]\nName=Kazumi\nComment=Watch Animes online with danmaku support.\nComment[zh_CN]=一款好用的追番软件\nExec=kazumi\nIcon=io.github.Predidit.Kazumi\nTerminal=false\nType=Application\nCategories=AudioVideo;Audio;Video;\nEOF\n\n    # 安装图标\n    install -Dm644 \"${srcdir}/icon.png\" \"${pkgdir}/usr/share/icons/hicolor/128x128/apps/io.github.Predidit.Kazumi.png\"\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"它的实现方式上半段就是从Kazumi Github仓库下载tar.gz文件然后复制相关依赖文件到指定位置，后半段则是给应用程序列表增加Kazumi应用，这样可以让你不用终端"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"kazumi"}]},{"type":"text","value":"启动它。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"给Kazumi Github仓库也提交了一个"},{"type":"element","tag":"a","props":{"href":"https://github.com/Predidit/Kazumi/pull/660","rel":["nofollow"]},"children":[{"type":"text","value":"Pull requests"}]},{"type":"text","value":"，希望能增加此安装方式，令人高兴的是被合并了。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"https://file.101045700.xyz/2025/01/cfc871e26ce25d6ed2c5ecb43ba05109.webp"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"希望能够帮到更多人。"}]}],"toc":{"title":"","searchDepth":4,"depth":4,"links":[]}},"_type":"markdown","_id":"content:posts:2025:01:arch-aur-kazumi.md","_source":"content","_file":"posts/2025/01/arch-aur-kazumi.md","_stem":"posts/2025/01/arch-aur-kazumi","_extension":"md","_original_dir":"/posts"},{"_path":"/takagi","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"君と光：我与高木圈的故事","description":"一切要始于一次好奇的探寻…. 我算是搭上了高木圈的末班车…","date":"2024-03-07T11:24:26.000Z","updated":"2024-03-08T15:30:53.000Z","categories":["动漫番剧"],"tags":["动漫","番剧","高木"],"readingTime":{"text":"6 min read","minutes":5.125,"time":307500,"words":1025},"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 2022 年的那个暑假，天气很热，在这样一个天气，没有什么是比家里蹲吹风扇，刷 B 站更好的事情了（Doge），于是我打开了 B 站，然后它给我推送了一个视频：“”西片太太开车预警“，我有点好奇的点进了这个视频，然后就有了一种莫名其妙的感觉：”这是什么番，我要看一看。”"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在评论区的引导下，我在B站搜索到了《擅长捉弄的高木同学》第二季（当时B站并没有第一季，然而现在上线了也把视频那段删了，悲），我决定先看一看第二季，于是我打开了第二季第一集…"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"25 分钟后…. 我：”甜啊！太甜了！“"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"于是我前往某些地方从第一季开始看，然后无法自拔…"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"没错，就这样我成为了一个高木粉！（十分草率）"}]},{"type":"element","tag":"h2","props":{"id":"机缘"},"children":[{"type":"text","value":"机缘"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"光看没人聊可不行啊？然后碰巧 QQ 有 QQ 频道这个功能，我便莫名其妙的去搜索高木同学，于是就加入了 QQ 频道，但此时我处于潜水状态，我选择再去二刷番剧（扭动），然后我在频道内搜寻相关资源打算存下来收藏看，但此时却发现频道还在使用万恶的百度网盘共享文件，这玩意的下载速度…简直要命，不过好在频道有一位大佬提供了番剧直链，我得以获取到了视频资源。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但作为一个爱折腾的人，碰巧此时，我对建站产生了兴趣并正在研究建站。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在网上看到有人搭建资源站以后，我产生了一个改变了我以后在高木圈做的事情的想法：建一个资源站，让大家都能在线下载和预览高木同学的相关资源。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"于是在一番钻研和鼓捣以后，2022 年 10 月，我建立了一个属于高木的资源站。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"此时我在做的事情就是搬砖，把资源搬过去，不过这是一件麻烦的事情，我在频道把我的资源站拿了出来，然后此时对我之后建设起了重要贡献的人出现了－－牧丰。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"他看到了资源站并表示愿意帮我填充资源，这肯定是一件好事，能减少我的工作量，也能更快的完成资源站的基本建设。 于是在他的帮助下，我完成了基本资源建设，资源站就这样放在那。"}]},{"type":"element","tag":"h2","props":{"id":"深入"},"children":[{"type":"text","value":"深入"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"再往后随着我们兴趣的提升，已经不能简单的鼓捣一个资源站了，于是2023年末期有了木创社的雏形——一个Github组织，建设了高木Wiki站，高木Fan社区（项目还是暴死了），我也结识了更多朋友，比如南栀，还有WaterApple，Ice Year等等，不尽其数，遇到了他们，大家也度过了一段快乐的时光。"}]},{"type":"element","tag":"h2","props":{"id":"结语"},"children":[{"type":"text","value":"结语"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"本段结语来自Ice Year的文章《君と光》（灵感丧失）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"2023 年 10 月 12 日，《擅长捉弄人的高木同学》的漫画也正式完结。在夏日祭的烟火之下，相互的表明心意与拥抱圆满了一直脑补的场景（喜极而泣）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"或许以后，了解高木同学的人可能终将会会逐渐减少吧，甚至哪怕是高木和西片也终将走向平常的生活（原高木同学可以印证） 然而，这种 “一期一会”，我想也正是《擅长捉弄人的高木同学》想表现的，没有惊天动地，没有缠绵萦绕，只是日常。细节与碎片中，更表现了高木与西片相遇的珍贵，也表现了观者与其相遇的珍贵。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"认真体悟其中的美好和温暖，这便是意义所在吧。多年以后，当回想起曾经的温暖的时候，“君と光 映すだけ”，便足够了。"}]}],"toc":{"title":"","searchDepth":4,"depth":4,"links":[{"id":"机缘","depth":2,"text":"机缘"},{"id":"深入","depth":2,"text":"深入"},{"id":"结语","depth":2,"text":"结语"}]}},"_type":"markdown","_id":"content:posts:takagi.md","_source":"content","_file":"posts/takagi.md","_stem":"posts/takagi","_extension":"md","_original_dir":"/posts"}],"navigation":[{"title":"关于","_path":"/about"},{"title":"云盘","_path":"/drive"},{"title":"Link","_path":"/link"},{"title":"2024","_path":"/2024","children":[{"title":"08","_path":"/2024/08","children":[{"title":"Docker部署Outline并使用Github作为OAuth服务","_path":"/2024/08/docker-deploy-outline"}]},{"title":"09","_path":"/2024/09","children":[{"title":"记一次被1Panel官方应用商店拒绝合并","_path":"/2024/09/1panel-appstore-refused"}]},{"title":"10","_path":"/2024/10","children":[{"title":"GitHub Action构建Shiroi Docker镜像","_path":"/2024/10/shiroi-docker-deployment"},{"title":"编写1Panel应用商店第三方程序","_path":"/2024/10/write-1panel-app"}]},{"title":"12","_path":"/2024/12","children":[{"title":"破坏型迁移：站点反复横跳与稳定工作","_path":"/2024/12/break-change-2024"},{"title":"为Oyiso主题引入TianliGPT摘要","_path":"/2024/12/oyiso-tianligpt"}]}]},{"title":"2025","_path":"/2025","children":[{"title":"01","_path":"/2025/01","children":[{"title":"为了一碟醋包了一盘饺子：构建和提交Kazumi AUR包","_path":"/2025/01/arch-aur-kazumi"}]}]},{"title":"君と光：我与高木圈的故事","_path":"/takagi"}]}