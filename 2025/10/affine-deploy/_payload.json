[{"data":1,"prerenderedAt":268},["ShallowReactive",2],{"/2025/10/affine-deploy/":3,"surround-/2025/10/affine-deploy":257},{"id":4,"title":5,"body":6,"categories":234,"date":236,"description":237,"draft":238,"extension":239,"image":23,"meta":240,"navigation":241,"path":242,"permalink":243,"readingTime":244,"recommend":249,"references":243,"seo":250,"sitemap":251,"stem":252,"tags":253,"type":243,"updated":243,"__hash__":256},"content/posts/2025/10/affine-deploy.md","Affine 部署：自托管类 Notion 知识库系统",{"type":7,"value":8,"toc":215},"minimark",[9,13,17,24,27,30,33,36,40,46,49,52,62,65,69,74,77,80,83,88,91,94,99,102,105,108,111,114,118,121,124,134,137,140,143,149,152,155,161,164,178,188,196,199,202,208],[10,11,12],"h2",{"id":12},"前言",[14,15,16],"p",{},"之前我曾经有写过 Outline 的部署教程，不过那篇教程已经年久失修到我自己都没法完整复现部署流程了，况且 Outline 官方对于托管的文档也是写的基本让人看不明白。",[14,18,19],{},[20,21],"img",{"alt":22,"src":23},"","https://affine.pro/overview/Plan.jpg",[14,25,26],{},"是时候该换个现代的知识库程序了，早年我曾了解到 Affine 这个知识库程序，在我还在用 Outline 的时候已经体验过它了，在当时它的自托管体验是很一般的：功能不完整，中文不完善等。",[14,28,29],{},"所以在当时我最终还是选定了 Outline 作为团队知识库程序，现在 Outline 不好用了，那么 Affine 支棱起来了吗？好像还真支棱起来了，至少看宣传资料还是不错的样子，我们来实际部署体验一下吧。",[10,31,32],{"id":32},"要求",[14,34,35],{},"首先我们先看看 Affine 的配置要求，看看它是比 Outline 要求高了还是低了。",[37,38,39],"h3",{"id":39},"存储",[41,42,43],"blockquote",{},[14,44,45],{},"The necessary storage space largely depends on the size of your workspaces and collaborators, blobs you may upload, and number of total docs.\nBasically, The server itself requires nearly 1.5 GB spare space for installation. The performance of your host's fs significantly affect performance of AFFiNE.",[14,47,48],{},"以上内容引用自 Affine 官方文档，大概意思是 Affine 的占用空间很大程度上取决于您的工作空间和协作者的规模、您可能上传的 blob 以及总文档数量。Affine本身需要约 1.5G 的存储空间来进行安装和运行。",[14,50,51],{},"然后根据 Affine 官方在他们旗舰实例 affine.pro 收集的使用情况整理来看：",[53,54,55,59],"ul",{},[56,57,58],"li",{},"每 1000 份文档，Postgres 空间增长 100 MB，平均每份文档 1000 字",[56,60,61],{},"每 10 GB Blob 存储空间按 1k 个 Blob 增长",[14,63,64],{},"总体来说还是需要服务器有足够的安装和使用空间的，太小硬盘的服务器长期使用就不是很推荐部署了，可以选择更轻量的知识库系统。",[37,66,68],{"id":67},"cpu","CPU",[41,70,71],{},[14,72,73],{},"We recommend the CPU of host to have at least 4 cores, for leverage long CPU holding jobs. AFFiNE's response speed depends on the specification of your CPU.",[14,75,76],{},"Affine 官方文档给出的建议是 CPU 至少有四个核心，以便利用长时间运行的 CPU 密集型任务。AFFiNE 的响应速度取决于您的 CPU 规格。",[14,78,79],{},"不过按照我长期的部署经验来看，2 Core 的 CPU 应该也是可以负担小团队和个人日常使用的，当然 1 Core 确实就太难为它了。",[37,81,82],{"id":82},"内存",[41,84,85],{},[14,86,87],{},"Memory are mostly consumed by Sync system and Doc merging. The larger the largest doc is, the more Memory will be taken to merge it.\nMemory specifications are various depends on the size of your docs and modification times of each docs.",[14,89,90],{},"官方文档介绍，使用内存主要被同步系统和文档合并消耗。文档越大，合并它所需的内存就越多。",[14,92,93],{},"Affine 在官方旗舰实例 affine.pro 监测的使用情况：",[53,95,96],{},[56,97,98],{},"合并一个有 10k 次修改的文档会导致内存使用峰值达到 1 GB",[14,100,101],{},"所以官方给出的建议是主机至少有 2GB 内存，如果文档总字数超过了 10k，那么建议内存至少在 4GB 以上。",[37,103,104],{"id":104},"总结",[14,106,107],{},"相比 Outline 的占用来说（我上次部署在 2c8g 的服务器上），Affine 相比可以说略轻量但也没轻量多少，不过它文档写的明白啊，Outline 文档我现在想部署都不知道该怎么看😢",[14,109,110],{},"在接下来的文章中，我们将使用 Docker Compose 方式进行部署 Affine，这是 Affine 推荐的部署方式。",[10,112,113],{"id":113},"部署",[37,115,117],{"id":116},"安装-docker","安装 Docker",[14,119,120],{},"那么首先我们安装 Docker，对于 Linux 用户，我们可以使用 Linuxmirrors 提供的更简单的一键安装 Docker 脚本（可自动判断系统和换源，甚至部分国产系统都可以装）。",[14,122,123],{},"什么？你是 Windows 或者想用图形化管理 Docker？Docker Desktop 欢迎你。",[125,126,131],"pre",{"className":127,"code":129,"language":130,"meta":22},[128],"language-bash","bash \u003C(curl -sSL https://linuxmirrors.cn/docker.sh)\n","bash",[132,133,129],"code",{"__ignoreMap":22},[14,135,136],{},"等待 Docker 安装完成，我们就可以开始下一步了。",[37,138,139],{"id":139},"新建文件夹",[14,141,142],{},"依然是熟悉的新建持久化数据文件夹。",[125,144,147],{"className":145,"code":146,"language":130,"meta":22},[128],"mkdir affine \ncd affine\n",[132,148,146],{"__ignoreMap":22},[37,150,151],{"id":151},"获取编排和环境变量文件",[14,153,154],{},"接下来我们使用以下命令获取部署需要的 Compose 编排文件和 env 环境变量文件，执行以下命令前，请确保你的终端已经在 affine 目录里了。",[125,156,159],{"className":157,"code":158,"language":130,"meta":22},[128],"wget -O docker-compose.yml https://github.com/toeverything/affine/releases/latest/download/docker-compose.yml\nwget -O .env https://github.com/toeverything/affine/releases/latest/download/default.env.example\n",[132,160,158],{"__ignoreMap":22},[37,162,163],{"id":163},"修改环境变量文件",[165,166,169,175],"alert",{":card":167,"card":22,"type":168},"true","warning",[170,171,172],"template",{"v-slot:title":22},[14,173,174],{},"注意！",[14,176,177],{},"在初始化并开始使用 Affine 后，请不要随便修改环境变量。",[14,179,180,181,184,185,187],{},"这里的",[132,182,183],{"code":183},"env","文件可能不是最新的，请优先以官方",[132,186,183],{"code":183},"文件内容为准，有关设置项我已经加注了中文注释在下文，请自行参照修改哦。",[125,189,194],{"className":190,"code":192,"language":193,"meta":22},[191],"language-yaml","# 选择需要部署的 Affine 版本，稳定（stable），测试（beta），金丝雀（canary）\n# 可选值：stable, beta, canary\nAFFINE_REVISION=stable\n\n# 服务在容器中向服务器暴露的端口，默认 3010\nPORT=3010\n\n# 为对外的链接设置服务器的主机地址\n# 默认注释，由反向代理管理\n# 启用 HTTPS\n# AFFINE_SERVER_HTTPS=true\n# 服务器域名\n# AFFINE_SERVER_HOST=affine.yourdomain.com\n# 或者使用完整的外部 URL\n# AFFINE_SERVER_EXTERNAL_URL=https://affine.yourdomain.com \n\n# 数据库持久化数据存放路径\nDB_DATA_LOCATION=~/.affine/self-host/postgres/pgdata\n# 上传的文件（图片、附件等）持久化存放路径\nUPLOAD_LOCATION=~/.affine/self-host/storage\n# 配置文件持久化存放路径\nCONFIG_LOCATION=~/.affine/self-host/config\n\n# 数据库用户名\nDB_USERNAME=affine\n# 数据库密码（留空表示不设置密码）\nDB_PASSWORD=\n# 数据库名称\nDB_DATABASE=affine\n","yaml",[132,195,192],{"__ignoreMap":22},[37,197,198],{"id":198},"启动编排服务器",[14,200,201],{},"Affine 相对来说还是简单许多的，需要在文件里配置的就刚才上面这些东西，剩下的配置需要我们启动 Affine 后在后台设置中设置。",[125,203,206],{"className":204,"code":205,"language":130,"meta":22},[128],"docker compose up -d\n",[132,207,205],{"__ignoreMap":22},[14,209,210,211,214],{},"如果一切顺利，我们将能够通过",[132,212,213],{"code":213},"http://localhost:3010","在浏览器中访问到 Affine。",{"title":22,"searchDepth":216,"depth":216,"links":217},4,[218,220,227],{"id":12,"depth":219,"text":12},2,{"id":32,"depth":219,"text":32,"children":221},[222,224,225,226],{"id":39,"depth":223,"text":39},3,{"id":67,"depth":223,"text":68},{"id":82,"depth":223,"text":82},{"id":104,"depth":223,"text":104},{"id":113,"depth":219,"text":113,"children":228},[229,230,231,232,233],{"id":116,"depth":223,"text":117},{"id":139,"depth":223,"text":139},{"id":151,"depth":223,"text":151},{"id":163,"depth":223,"text":163},{"id":198,"depth":223,"text":198},[235],"技术探索","2025-10-23 05:00:00","本文介绍了自托管知识库系统 Affine 的部署流程，涵盖其存储、CPU、内存等配置要求，并对比 Outline 指出其文档更清晰。文章采用 Docker Compose 方式部署，提供从安装 Docker、获取配置文件、修改环境变量到启动服务的完整步骤，适合希望搭建私有知识库的用户参考。",false,"md",{},true,"/2025/10/affine-deploy",null,{"text":245,"minutes":246,"time":247,"words":248},"8 min read",7.09,425400,1418,12,{"title":5,"description":237},{"loc":242},"posts/2025/10/affine-deploy",[254,255],"自托管","知识库","Sk7y5lcRiqgmzNmA46pEzju3O-NQSqnLbnn6iTnOy8o",[258,263],{"title":259,"path":260,"stem":261,"date":262,"type":243,"children":-1},"Lemmy 部署：Rust Fediverse 社区系统","/2025/10/lemmy-fediverse-deploy","posts/2025/10/lemmy-fediverse-deploy","2025-10-22 06:00:00",{"title":264,"path":265,"stem":266,"date":267,"type":243,"children":-1},"Misskey 部署：新一代联邦星际微博平台","/2025/10/misskey-fediverse-deploy","posts/2025/10/misskey-fediverse-deploy","2025-10-24 05:00:00",1761301121332]