[{"data":1,"prerenderedAt":255},["ShallowReactive",2],{"/2025/10/otterwiki-deploy/":3,"surround-/2025/10/otterwiki-deploy":243},{"id":4,"title":5,"body":6,"categories":219,"date":221,"description":222,"draft":223,"extension":224,"image":26,"meta":225,"navigation":226,"path":227,"permalink":228,"readingTime":229,"recommend":234,"references":228,"seo":235,"sitemap":236,"stem":237,"tags":238,"type":241,"updated":228,"__hash__":242},"content/posts/2025/10/otterwiki-deploy.md","OtterWiki 部署：基于 Python 的轻量知识库系统",{"type":7,"value":8,"toc":205},"minimark",[9,13,17,20,27,30,33,36,48,52,55,64,67,70,73,84,89,92,98,105,109,120,128,138,145,155,159,162,168,179,187,190,196,199,202],[10,11,12],"h2",{"id":12},"前言",[14,15,16],"p",{},"前两天我简单介绍了下 Affine 知识库系统，然后有人可能就有疑问了，Affine 占用那么高，我只是想部署一个小知识库，也不需要那么多复杂的特性，有没有轻巧一点的系统呢？",[14,18,19],{},"还真有，在之前个人写小 Wiki 在线整理时曾经了解并使用过 OtterWiki 这个知识库系统，使用 Flask 框架，基于 Python 编写，使用 Markdown 作为标记语言，总体来说还是比较舒服的，页面设计不算十分前卫但也不算落后。",[14,21,22],{},[23,24],"img",{"alt":25,"src":26},"","https://blog-files.101045700.xyz/2025/10/otterwiki.png",[14,28,29],{},"且自身还支持 Git Http 服务器，可以通过 Git 协议拉取和管理知识库内容。还是有点意思的。",[10,31,32],{"id":32},"要求",[14,34,35],{},"OtterWiki 的 CPU 需求非常低，你甚至可以在树莓派上运行它。所需的 RAM 大约为 100MiB，官方给出的推荐部署方式是使用 Docker 部署。",[14,37,38,39,43,44,47],{},"需要使用专用域名，例如",[40,41,42],"code",{"code":42},"wiki.example.com","，不能使用子目录",[40,45,46],{"code":46},"example.com/wiki","，浏览器需要启用 Javascript。",[10,49,51],{"id":50},"安装-docker","安装 Docker",[14,53,54],{},"我们使用 Linuxmirrors 提供的 Docker 安装脚本来执行 Docker 的安装，它可以在多种 Linux 系统上安装 Docker。",[56,57,62],"pre",{"className":58,"code":60,"language":61,"meta":25},[59],"language-bash","bash \u003C(curl -sSL https://linuxmirrors.cn/docker.sh)\n","bash",[40,63,60],{"__ignoreMap":25},[14,65,66],{},"在遵照脚本步骤完成安装 Docker 后，我们进行下一步操作。",[10,68,69],{"id":69},"反向代理服务",[14,71,72],{},"我个人推荐使用 Caddy 作为反向代理服务的选择，它和 OtterWiki 一样占用的性能极低，且可以自动为域名申请 Https 证书。",[14,74,75,76,83],{},"Caddy 的部署和安装可以参见",[77,78,82],"a",{"href":79,"rel":80},"https://caddyserver.com/docs/install",[81],"nofollow","官方文档","，我们在这里仅介绍 Debian/Ubuntu 环境下的安装和使用方式。",[85,86,88],"h3",{"id":87},"安装-caddy","安装 Caddy",[14,90,91],{},"使用以下命令在 Debian/Ubuntu 环境下一键安装和启动 Caddy 本身以及需求的组件以及配置 Caddy 官方软件包仓库（稳定版）：",[56,93,96],{"className":94,"code":95,"language":61,"meta":25},[59],"sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https curl \ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg \ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list \nchmod o+r /usr/share/keyrings/caddy-stable-archive-keyring.gpg \nchmod o+r /etc/apt/sources.list.d/caddy-stable.list \nsudo apt update \nsudo apt install caddy\n",[40,97,95],{"__ignoreMap":25},[14,99,100,101,104],{},"执行此安装操作后，Caddy 将自动启动并作为名为 ",[40,102,103],{"code":103},"caddy"," 的 systemd 服务运行 Caddy。",[85,106,108],{"id":107},"配置-caddy-反向代理","配置 Caddy 反向代理",[14,110,111,112,115,116,119],{},"我们打开",[40,113,114],{"code":114},"/etc/caddy/","目录下的",[40,117,118],{"code":118},"Caddyfile","文件，在最下面首先添加如下配置：",[56,121,126],{"className":122,"code":124,"language":125,"meta":25},[123],"language-json","wiki.example.com {\n  reverse_proxy 127.0.0.1:8080\n  encode zstd gzip\n}\n","json",[40,127,124],{"__ignoreMap":25},[14,129,130,131,133,134,137],{},"这代表 Caddy 会反代",[40,132,42],{"code":42},"的请求，并把请求转发到在本地",[40,135,136],{"code":136},"8080","端口上暴露的服务，我们这篇教程会让 OtterWiki 在 8080 端口上部署，这是官方给出的默认配置端口，如果你想要更换端口，那么在上面的配置文件和后面的配置文件中你都需要更换对应端口。",[14,139,140,141,144],{},"Caddy 支持通过配置文件启用 Zstandard和 Gzip 压缩功能，这是主流的两种压缩算法。我们只需要把",[40,142,143],{"code":143}," encode zstd gzip","加入域名配置文件下方即可，后续加入其他配置也是类似这样放置。",[14,146,147,148,150,151,154],{},"同样你也需要更换",[40,149,42],{"code":42},"为你实际想部署的域名，完成配置后，确保域名已经解析到服务器的前提下，使用",[40,152,153],{"code":153},"systemctl restart caddy","重启 Caddy 服务。",[10,156,158],{"id":157},"安装-otterwiki","安装 OtterWiki",[14,160,161],{},"我们先新建放置 OtterWiki 数据的文件夹，然后终端进入其中。",[56,163,166],{"className":164,"code":165,"language":61,"meta":25},[59],"mkdir otterwiki\ncd otterwiki\n",[40,167,165],{"__ignoreMap":25},[14,169,170,171,174,175,178],{},"在",[40,172,173],{"code":173},"otterwiki","目录下新建",[40,176,177],{"code":177},"docker-compose.yml","文件并填入如下内容",[56,180,185],{"className":181,"code":183,"language":184,"meta":25},[182],"language-yaml","services:\n  otterwiki:\n    image: redimp/otterwiki:2\n    restart: unless-stopped\n    ports:\n      - 127.0.0.1:8080:80\n    volumes:\n      - ./app-data:/app-data\n","yaml",[40,186,183],{"__ignoreMap":25},[14,188,189],{},"接下来使用以下命令拉取和启动编排镜像文件：",[56,191,194],{"className":192,"code":193,"language":61,"meta":25},[59],"docker compose up -d\n",[40,195,193],{"__ignoreMap":25},[14,197,198],{},"如果你的域名解析和 Caddy 配置正确，稍等片刻你就可以在域名上看到 OtterWiki 了。",[10,200,201],{"id":201},"结束",[14,203,204],{},"OtterWiki 启动后注册的第一个账户将作为管理员账户，所以部署启动后请尽快先注册账户哦。",{"title":25,"searchDepth":206,"depth":206,"links":207},4,[208,210,211,212,217,218],{"id":12,"depth":209,"text":12},2,{"id":32,"depth":209,"text":32},{"id":50,"depth":209,"text":51},{"id":69,"depth":209,"text":69,"children":213},[214,216],{"id":87,"depth":215,"text":88},3,{"id":107,"depth":215,"text":108},{"id":157,"depth":209,"text":158},{"id":201,"depth":209,"text":201},[220],"技术探索","2025-10-24 22:00:00","本文介绍了轻量级知识库系统 OtterWiki 的完整部署流程。系统基于 Python Flask 开发，采用 Markdown 语法，支持 Git 协议管理内容，最低仅需 100MiB 内存。部署步骤包括：使用一键脚本安装 Docker，通过官方仓库安装 Caddy 并配置自动 HTTPS 反向代理，创建专用目录后编写 docker-compose.yml 启动服务，默认监听 8080 端口。首次注册账户将自动获得管理员权限，适合资源有限的个人或小团队快速搭建私有 Wiki。",false,"md",{},true,"/2025/10/otterwiki-deploy",null,{"text":230,"minutes":231,"time":232,"words":233},"5 min read",4.505,270300,901,13,{"title":5,"description":222},{"loc":227},"posts/2025/10/otterwiki-deploy",[239,240],"自托管","知识库","tech","fHEAcTKCHLgVCSAdG-5TIYDYFXKSRY5gTjVdXh8tQNg",[244,249],{"title":245,"path":246,"stem":247,"date":248,"type":241,"children":-1},"Misskey 部署：新一代联邦星际微博平台","/2025/10/misskey-fediverse-deploy","posts/2025/10/misskey-fediverse-deploy","2025-10-24 05:00:00",{"title":250,"path":251,"stem":252,"date":253,"type":254,"children":-1},"迟来的个人对《拔作岛》第一部游戏动漫杂谈","/2025/10/nukitashi-gv-end","posts/2025/10/nukitashi-gv-end","2025-10-25 02:00:00","story",1762005542981]