import{a_ as h}from"#entry";const A={offline:"离线",online:"在线",away:"离开",snooze:"打盹",busy:"忙碌",trading:"交易中",playing:"游戏中"},E={offline:"#90a0a6",online:"#4fc951",away:"#ffc72c",snooze:"#ffc72c",busy:"#ff6554",trading:"#6495ed",playing:"#26d07c"},u=h.steam?.apiBase||"https://steam-api-profile-palomiku.netlify.app/api",i=`${u}/steam-user`,m=`${u}/steam-games`,d=`${u}/steam-achievements`;async function n(s){try{const a=await fetch(s,{method:"GET",headers:{Accept:"application/json"},cache:"no-cache"});if(!a.ok)throw new Error(`HTTP ${a.status}: ${a.statusText}`);return await a.json()}catch(a){const o=a instanceof Error?a.message:String(a);return console.error("[Steam] Fetch error:",o),null}}function y(s){return s<1?"< 1 小时":`${Math.round(s)} 小时`}function g(s){try{return new Date(s).toLocaleTimeString("zh-CN",{hour:"2-digit",minute:"2-digit",second:"2-digit",hour12:!1})}catch{return s}}function p(s){try{return new Date(s).toLocaleString("zh-CN",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",hour12:!1})}catch{return s}}const M=()=>{const s=async()=>{const e=await n(i);return!e||!e.success?null:e.data?.user||null},a=async()=>{const e=await n(m);return!e||!e.success?null:e.data?.games||null},o=async()=>{const e=await n(d);return!e||!e.success?null:e.data?.achievements||null},l=async()=>{try{console.log("[Steam] Fetching data from three endpoints");const[e,t,r]=await Promise.all([n(i),n(m),n(d)]);return!e?.success||!t?.success?{success:!1,error:"Failed to fetch required Steam data",code:"FETCH_ERROR"}:{success:!0,data:{user:e.data?.user,games:t.data?.games,achievements:r?.data?.achievements},allMetadata:{user:e.metadata,games:t.metadata,achievements:r?.metadata}}}catch(e){const t=e instanceof Error?e.message:String(e);return console.error("[Steam] Fetch error:",t),{success:!1,error:`Fetch failed: ${t}`,code:"FETCH_ERROR"}}};return{fetchSteamData:l,fetchUserInfo:s,fetchGamesData:a,fetchAchievementsData:o,getRecentGames:async()=>{const e=await l();return!e.success||!e.data?.games?.recentGames?[]:e.data.games.recentGames.map(t=>({...t,playtimeForever:typeof t.playtimeForever=="number"?Math.round(t.playtimeForever):0,playtimeTwoWeeks:t.playtimeTwoWeeks?Math.round(t.playtimeTwoWeeks):0}))},getAllGamesSorted:async()=>{const e=await a();return e?.allGames?e.allGames.map(r=>({...r,playtimeForever:Math.round(r.playtimeForever/60),playtimeTwoWeeks:r.playtimeTwoWeeks?Math.round(r.playtimeTwoWeeks/60):0})).sort((r,c)=>c.playtimeForever-r.playtimeForever):[]},getAchievements:async()=>await o(),getUserInfo:async()=>{try{console.log("[Steam] Fetching user info only");const e=await n(i);return!e?.success||!e.data?.user?null:e.data.user}catch(e){return console.error("[Steam] Failed to fetch user info:",e),null}},getGameStats:async()=>{const e=await a();if(!e?.allGames)return null;const{totalCount:t}=e,r=e.allGames.reduce((c,f)=>c+Math.round(f.playtimeForever/60),0);return{totalCount:t,totalPlaytime:r,averagePlaytime:t>0?Math.round(r/t):0}},formatPlaytime:y,formatCacheTime:g,formatCacheDate:p}};export{A as a,g as f,E as s,M as u};
