import{_ as f}from"./D9njNC-M.js";import{_ as v}from"./fj4Yn3zw.js";import{d as b,B as g,r as u,ak as h,D as $,a0 as n,c as w,a9 as C,o as x,f as y,h as B,w as j,i as D}from"#entry";import{u as S}from"./47qejhKM.js";import{t as T,_ as k,g as A}from"./DzgDkxZF.js";const E=b({__name:"BlogStats",async setup(O){let s,m;const l=g(),p=h(),i=u(p.public.buildTime),r=u(l.component.stats.wordCount),c=u(""),{data:t,error:W}=([s,m]=$(()=>S("blog-stats",()=>$fetch("/api/stats").catch(()=>null))),s=await s,m(),s);t&&t.value&&(r.value=n(t.value.total.words),c.value=Object.entries(t.value.annual).reverse().map(([a,e])=>`${a}年：${e.posts}篇，${n(e.words)}字`).join(`
`));const _=[{label:"运营时长",value:T(l.timeEstablished),tip:`博客于${l.timeEstablished}上线`},{label:"上次更新",value:()=>C(k,{datetime:p.public.buildTime,relative:!0}),tip:w(()=>`构建于${i.value}`)},{label:"总字数",value:r,tip:c}];return x(async()=>{if(i.value=A(i.value),!t||!t.value){const a=await $fetch("/api/stats").catch(()=>null);if(!a)return;r.value=n(a.total.words),c.value=Object.entries(a.annual).reverse().map(([e,o])=>`${e}年：${o.posts}篇，${n(o.words)}字`).join(`
`)}}),(a,e)=>{const o=f,d=v;return B(),y(d,{card:"",title:"博客统计"},{default:j(()=>[D(o,{items:_,size:"small"})]),_:1})}}}),M=Object.assign(E,{__name:"WidgetBlogStats"});export{M as default};
