import{u as $,q as k}from"./DahzMM98.js";import{ae as I,af as O,ag as Q,ah as R,ai as T,P as f,aj as _,M as D,A as q,r as g,c as m}from"#entry";const z=(e,t)=>e.reduce((o,n)=>{const a=t(n);return o[a]||(o[a]=[]),o[a].push(n),o},{}),E=(e,t,o=!1)=>{if(!e)return[];const n=(r,s)=>t(r)-t(s),a=(r,s)=>t(s)-t(r);return e.slice().sort(o===!0?a:n)},G=(e,t,o="asc")=>{if(!e)return[];const n=(r,s)=>`${t(r)}`.localeCompare(t(s)),a=(r,s)=>`${t(s)}`.localeCompare(t(r));return e.slice().sort(o==="desc"?a:n)};function M(e){return I()?(O(e),!0):!1}typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const d=new WeakMap;function W(e,t,o={}){const{mode:n="replace",route:a=Q(),router:r=R(),transform:s}=o;let p=c=>c,y=c=>c;typeof s=="function"?p=s:s&&(s.get&&(p=s.get),s.set&&(y=s.set)),d.has(r)||d.set(r,new Map);const l=d.get(r);let i=a.query[e];M(()=>{i=void 0});let h;const S=T((c,C)=>(h=C,{get(){return c(),p(i!==void 0?i:f(t))},set(u){u=y(u),i!==u&&(i=u===f(t)?void 0:u,l.set(e,u===f(t)?void 0:u),C(),_(()=>{if(l.size===0)return;const b=Object.fromEntries(l.entries());l.clear();const{params:x,query:w,hash:A}=a;r[f(n)]({params:x,query:{...w,...b},hash:A})}))}}));return D(()=>a.query[e],c=>{i!==p(c)&&(i=c,h())},{flush:"sync"}),S}function P(e="posts/%"){return $(`index_${e}`,()=>k("content").where("stem","LIKE",e).select("categories","date","description","image","path","readingTime","recommend","title","type","updated").all(),{default:()=>[]})}function K(e,t){const{bindQuery:o}=t??{},n=o?W(o,void 0,{transform:s=>s,mode:"push"}):g(),a=m(()=>[...new Set(f(e).map(s=>s.categories?.[0]))]),r=m(()=>f(e).filter(s=>!n.value||s.categories?.[0]===n.value));return{category:n,categories:a,listCategorized:r}}function L(e){const t=q(),o=g(t.pagination.sortOrder||"date"),n=g(),a=m(()=>G(f(e),r=>r[o.value]||"",n.value?"asc":"desc"));return{sortOrder:o,isAscending:n,listSorted:a}}function N(e){return q().article.categories[e]?.icon??"ph:folder-bold"}function B(e,t={prefix:"text"}){e||(e="tech");const{prefix:o}=t;return`${o}-${e}`}export{P as a,L as b,K as c,N as d,B as e,z as g,E as s,W as u};
