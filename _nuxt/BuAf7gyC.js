import{_ as f}from"./BMSnCtJh.js";import{_ as b}from"./DaVK7Niy.js";import{u as v,p as n}from"#entry";import{J as g,r as u,A as $,bn as h,k as w,M as C,N as x,aM as y,aN as j,aT as B,aR as T}from"./uh8YQMIa.js";import{u as A}from"./CN2-G2-Z.js";import{t as N,_ as S,g as k}from"./XDkT6azm.js";const D=g({__name:"BlogStats",async setup(E){let s,m;const l=v(),p=$(),i=u(p.public.buildTime),r=u(l.component.stats.wordCount),c=u(""),{data:t,error:M}=([s,m]=h(()=>A("blog-stats",()=>$fetch("/api/stats").catch(()=>null))),s=await s,m(),s);t&&t.value&&(r.value=n(t.value.total.words),c.value=Object.entries(t.value.annual).reverse().map(([a,e])=>`${a}年：${e.posts}篇，${n(e.words)}字`).join(`
`));const _=[{label:"运营时长",value:N(l.timeEstablished),tip:`博客于${l.timeEstablished}上线`},{label:"上次更新",value:()=>C(S,{datetime:p.public.buildTime,relative:!0}),tip:w(()=>`构建于${i.value}`)},{label:"总字数",value:r,tip:c}];return x(async()=>{if(i.value=k(i.value),!t||!t.value){const a=await $fetch("/api/stats").catch(()=>null);if(!a)return;r.value=n(a.total.words),c.value=Object.entries(a.annual).reverse().map(([e,o])=>`${e}年：${o.posts}篇，${n(o.words)}字`).join(`
`)}}),(a,e)=>{const o=f,d=b;return j(),y(d,{card:"",title:"博客统计"},{default:B(()=>[T(o,{items:_,size:"small"})]),_:1})}}}),J=Object.assign(D,{__name:"WidgetBlogStats"});export{J as default};
