import{u as A,q as Q}from"./BUeujCvc.js";import{aj as $,ak as I,al as O,am as R,an as T,Q as f,ao as _,N as D,B as q,r as g,c as m}from"#entry";const E=(e,t)=>e.reduce((o,n)=>{const a=t(n);return o[a]||(o[a]=[]),o[a].push(n),o},{}),M=(e,t,o=!1)=>{if(!e)return[];const n=(r,s)=>t(r)-t(s),a=(r,s)=>t(s)-t(r);return e.slice().sort(o===!0?a:n)},G=(e,t,o="asc")=>{if(!e)return[];const n=(r,s)=>`${t(r)}`.localeCompare(t(s)),a=(r,s)=>`${t(s)}`.localeCompare(t(r));return e.slice().sort(o==="desc"?a:n)};function W(e){return $()?(I(e),!0):!1}typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const d=new WeakMap;function j(e,t,o={}){const{mode:n="replace",route:a=O(),router:r=R(),transform:s}=o;let l=c=>c,y=c=>c;typeof s=="function"?l=s:s&&(s.get&&(l=s.get),s.set&&(y=s.set)),d.has(r)||d.set(r,new Map);const p=d.get(r);let i=a.query[e];W(()=>{i=void 0});let h;const S=T((c,C)=>(h=C,{get(){return c(),l(i!==void 0?i:f(t))},set(u){u=y(u),i!==u&&(i=u===f(t)?void 0:u,p.set(e,u===f(t)?void 0:u),C(),_(()=>{if(p.size===0)return;const b=Object.fromEntries(p.entries());p.clear();const{params:x,query:w,hash:k}=a;r[f(n)]({params:x,query:{...w,...b},hash:k})}))}}));return D(()=>a.query[e],c=>{i!==l(c)&&(i=c,h())},{flush:"sync"}),S}function N(e="posts/%"){return A(`index_${e}`,()=>Q("content").where("stem","LIKE",e).select("categories","date","description","image","path","readingTime","recommend","title","type","updated").all(),{default:()=>[]})}function B(e,t){const{bindQuery:o}=t??{},n=o?j(o,void 0,{transform:s=>s,mode:"push"}):g(),a=m(()=>[...new Set(f(e).map(s=>s.categories?.[0]))]),r=m(()=>f(e).filter(s=>!n.value||s.categories?.[0]===n.value));return{category:n,categories:a,listCategorized:r}}function K(e){const t=q(),o=g(t.pagination.sortOrder||"date"),n=g(),a=m(()=>G(f(e),r=>r[o.value]||"",n.value?"asc":"desc"));return{sortOrder:o,isAscending:n,listSorted:a}}function L(e){return q().article.categories[e]?.icon??"ph:folder-bold"}function P(e,t={prefix:"text"}){e||(e="tech");const{prefix:o}=t;return`${o}-${e}`}export{K as a,B as b,N as c,L as d,P as e,E as g,M as s,j as u};
