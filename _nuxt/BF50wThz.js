import{d as f,a4 as n,e as a,o as v,ao as b,a6 as j,j as S,k,l as r,C as w}from"#entry";const A={class:"music-score"},C={ref:"abcjs-container"},O={ref:"synth-controller"},P=f({__name:"MusicScore",props:{abc:{}},setup(c){const u=c,l=n("abcjs-container"),i=n("synth-controller"),o=a(),s=a(),d={responsive:"resize"},p={displayLoop:!0,displayRestart:!0,displayPlay:!0,displayProgress:!0,displayWarp:!0};async function _(){try{return(await fetch("https://paulrosen.github.io/midi-js-soundfonts/",{method:"HEAD"})).ok}catch(e){return console.error(`[music-abc] 无法连接 SoundFonts，不启用播放能力
`,e),!1}}return v(async()=>{const{renderAbc:e,synth:t}=await b(async()=>{const{renderAbc:h,synth:y}=await import("./FvuYFBNp.js").then(m=>m.i);return{renderAbc:h,synth:y}},[],import.meta.url);o.value=e(l.value,u.abc,d)[0],!(!t.supportsAudio()||!await _())&&(s.value=new t.SynthController,s.value.load(i.value,null,p),s.value.setTune(o.value,!1))}),j(()=>{s.value?.pause()}),(e,t)=>(k(),S("div",A,[r("div",C,null,512),r("div",O,null,512)]))}}),M=Object.assign(w(P,[["__scopeId","data-v-c5f76516"]]),{__name:"MusicScore"});export{M as default};
