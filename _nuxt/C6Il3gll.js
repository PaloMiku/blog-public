import{_ as f}from"./Ba5UGzaY.js";import{_ as v}from"./DgvfXdhd.js";import{d as b,u as g,e as u,ap as $,w as h,a7 as n,c as w,A as C,G as x,J as y,o as j,K as B,l as A}from"#entry";import{u as S}from"./CBZn_wPm.js";import{t as T,_ as D,g as E}from"./BiOZ_-Cs.js";const O=b({__name:"BlogStats",async setup(W){let s,p;const l=g(),m=$(),i=u(m.public.buildTime),r=u(l.component.stats.wordCount),c=u(""),{data:t,error:k}=([s,p]=h(()=>S("blog-stats",()=>$fetch("/api/stats").catch(()=>null))),s=await s,p(),s);t&&t.value&&(r.value=n(t.value.total.words),c.value=Object.entries(t.value.annual).reverse().map(([e,a])=>`${e}年：${a.posts}篇，${n(a.words)}字`).join(`
`));const _=[{label:"运营时长",value:T(l.timeEstablished),tip:`博客于${l.timeEstablished}上线`},{label:"上次更新",value:()=>C(D,{datetime:m.public.buildTime,relative:!0}),tip:w(()=>`构建于${i.value}`)},{label:"总字数",value:r,tip:c}];return x(async()=>{if(i.value=E(i.value),!t||!t.value){const e=await $fetch("/api/stats").catch(()=>null);if(!e)return;r.value=n(e.total.words),c.value=Object.entries(e.annual).reverse().map(([a,o])=>`${a}年：${o.posts}篇，${n(o.words)}字`).join(`
`)}}),(e,a)=>{const o=f,d=v;return j(),y(d,{card:"",title:"博客统计"},{default:B(()=>[A(o,{items:_,size:"small"})]),_:1})}}}),K=Object.assign(O,{__name:"WidgetBlogStats"});export{K as default};
