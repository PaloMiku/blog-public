import{J as f,be as o,r as a,N as b,a7 as v,aD as j,Q as S,aN as w,b7 as r,b4 as A}from"./BOu4zRvQ.js";const O={class:"music-score"},P={ref:"abcjs-container"},k={ref:"synth-controller"},C=f({__name:"MusicScore",props:{abc:{}},setup(c){const u=c,l=o("abcjs-container"),i=o("synth-controller"),n=a(),s=a(),d={responsive:"resize"},p={displayLoop:!0,displayRestart:!0,displayPlay:!0,displayProgress:!0,displayWarp:!0};async function _(){try{return(await fetch("https://paulrosen.github.io/midi-js-soundfonts/",{method:"HEAD"})).ok}catch(e){return console.error(`[music-abc] 无法连接 SoundFonts，不启用播放能力
`,e),!1}}return b(async()=>{const{renderAbc:e,synth:t}=await v(async()=>{const{renderAbc:h,synth:y}=await import("./FvuYFBNp.js").then(m=>m.i);return{renderAbc:h,synth:y}},[],import.meta.url);n.value=e(l.value,u.abc,d)[0],!(!t.supportsAudio()||!await _())&&(s.value=new t.SynthController,s.value.load(i.value,null,p),s.value.setTune(n.value,!1))}),j(()=>{s.value?.pause()}),(e,t)=>(w(),S("div",O,[r("div",P,null,512),r("div",k,null,512)]))}}),M=Object.assign(A(C,[["__scopeId","data-v-c5f76516"]]),{__name:"MusicScore"});export{M as default};
